import"colors";import e from"dotenv";import t,{existsSync as r,mkdirSync as o,appendFile as i,readFileSync as n,writeFileSync as a,promises as s}from"fs";import l,{join as c,posix as p}from"path";import{HttpsProxyAgent as h}from"https-proxy-agent";import u from"http";import d from"https";import*as g from"url";import{fileURLToPath as m}from"url";import{z as f}from"zod";import v from"prompts";import{Pool as y}from"tarn";import{v4 as b}from"uuid";import w from"node:path";import E from"puppeteer";import{randomBytes as T}from"node:crypto";import R from"cors";import S from"express";import k from"multer";import L from"express-rate-limit";async function x(e,t={}){return new Promise(((r,o)=>{const i=(e=>e.startsWith("https")?d:u)(e);i.get(e,t,(e=>{let t="";e.on("data",(e=>{t+=e})),e.on("end",(()=>{t||o("Nothing was fetched from the URL."),e.text=t,r(e)}))})).on("error",(e=>{o(e)}))}))}const O={puppeteer:{args:{value:[],type:"string[]",description:"Arguments array to send to Puppeteer."}},highcharts:{version:{value:"latest",envLink:"HIGHCHARTS_VERSION",type:"string",description:"The Highcharts version to be used."},cdnURL:{value:"https://code.highcharts.com/",envLink:"HIGHCHARTS_CDN_URL",type:"string",description:"The CDN URL for Highcharts scripts to be used."},coreScripts:{envLink:"HIGHCHARTS_CORE_SCRIPTS",value:["highcharts","highcharts-more","highcharts-3d"],type:"string[]",description:"The core Highcharts scripts to fetch."},modules:{envLink:"HIGHCHARTS_MODULES",value:["stock","map","gantt","exporting","export-data","parallel-coordinates","accessibility","annotations-advanced","boost-canvas","boost","data","data-tools","draggable-points","static-scale","broken-axis","heatmap","tilemap","tiledwebmap","timeline","treemap","treegraph","item-series","drilldown","histogram-bellcurve","bullet","funnel","funnel3d","geoheatmap","pyramid3d","networkgraph","overlapping-datalabels","pareto","pattern-fill","pictorial","price-indicator","sankey","arc-diagram","dependency-wheel","series-label","solid-gauge","sonification","stock-tools","streamgraph","sunburst","variable-pie","variwide","vector","venn","windbarb","wordcloud","xrange","no-data-to-display","drag-panes","debugger","dumbbell","lollipop","cylinder","organization","dotplot","marker-clusters","hollowcandlestick","heikinashi","flowmap"],type:"string[]",description:"The modules of Highcharts to fetch."},indicators:{envLink:"HIGHCHARTS_INDICATORS",value:["indicators-all"],type:"string[]",description:"The indicators of Highcharts to fetch."},scripts:{value:["https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js","https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.34/moment-timezone-with-data.min.js"],type:"string[]",description:"Additional optional scripts or dependencies to fetch."},forceFetch:{envLink:"HIGHCHARTS_FORCE_FETCH",value:!1,type:"boolean",description:"The flag to determine whether to refetch all scripts after each server rerun."},cachePath:{envLink:"HIGHCHARTS_CACHE_PATH",value:".cache",type:"string",description:"The path to the cache directory. It is used to store the Highcharts scripts and custom scripts."}},export:{infile:{value:!1,type:"string",description:"The input file should include a name and a type (json or svg). It must be correctly formatted as a JSON or SVG file."},instr:{value:!1,type:"string",description:"Input, provided in the form of a stringified JSON or SVG file, will override the --infile option."},options:{value:!1,type:"string",description:"An alias for the --instr option."},outfile:{value:!1,type:"string",description:"The output filename along with a type (jpeg, png, pdf, or svg). This will ignore the --type flag."},type:{envLink:"EXPORT_TYPE",value:"png",type:"string",description:"The file export format. It can be jpeg, png, pdf, or svg."},constr:{envLink:"EXPORT_CONSTR",value:"chart",type:"string",description:"The constructor to use. Can be chart, stockChart, mapChart, or ganttChart."},defaultHeight:{envLink:"EXPORT_DEFAULT_HEIGHT",value:400,type:"number",description:"the default height of the exported chart. Used when no value is set."},defaultWidth:{envLink:"EXPORT_DEFAULT_WIDTH",value:600,type:"number",description:"The default width of the exported chart. Used when no value is set."},defaultScale:{envLink:"EXPORT_DEFAULT_SCALE",value:1,type:"number",description:"The default scale of the exported chart. Used when no value is set."},height:{type:"number",value:!1,description:"The height of the exported chart, overriding the option in the chart settings."},width:{type:"number",value:!1,description:"The width of the exported chart, overriding the option in the chart settings."},scale:{value:!1,type:"number",description:"The scale of the exported chart, overriding the option in the chart settings. Ranges between 0.1 and 5.0."},globalOptions:{value:!1,type:"string",description:"Either a stringified JSON or a filename containing options to be passed into the Highcharts.setOptions."},themeOptions:{value:!1,type:"string",description:"Either a stringified JSON or a filename containing theme options to be passed into the Highcharts.setOptions."},batch:{value:!1,type:"string",description:'Initiates a batch job with a string containing input/output pairs: "in=out;in=out;...".'},rasterizationTimeout:{envLink:"EXPORT_RASTERIZATION_TIMEOUT",value:1500,type:"number",description:"The duration in milliseconds to wait for rendering a webpage."}},customLogic:{allowCodeExecution:{envLink:"CUSTOM_LOGIC_ALLOW_CODE_EXECUTION",value:!1,type:"boolean",description:"Controls whether the execution of arbitrary code is allowed during the exporting process."},allowFileResources:{envLink:"CUSTOM_LOGIC_ALLOW_FILE_RESOURCES",value:!1,type:"boolean",description:"Controls the ability to inject resources from the filesystem. This setting has no effect when running as a server."},customCode:{value:!1,type:"string",description:"Custom code to execute before chart initialization. It can be a function, code wrapped within a function, or a filename with the .js extension."},callback:{value:!1,type:"string",description:"JavaScript code to run during construction. It can be a function or a filename with the .js extension."},resources:{value:!1,type:"string",description:"Additional resource in the form of a stringified JSON, which may contain files, js, and css sections."},loadConfig:{value:!1,type:"string",legacyName:"fromFile",description:"A file containing a pre-defined configuration to use."},createConfig:{value:!1,type:"string",description:"Enables setting options through a prompt and saving them in a provided config file."}},server:{enable:{envLink:"SERVER_ENABLE",value:!1,type:"boolean",cliName:"enableServer",description:"When set to true, the server starts on the local IP address 0.0.0.0."},host:{envLink:"SERVER_HOST",value:"0.0.0.0",type:"string",description:"The hostname of the server. Additionally, it starts a server on the provided hostname."},port:{envLink:"SERVER_PORT",value:7801,type:"number",description:"The server port when enabled."},benchmarking:{envLink:"SERVER_BENCHMARKING",value:!1,type:"boolean",cliName:"serverBenchmarking",description:"Indicates whether to display the duration, in milliseconds, of specific actions that occur on the server while serving a request."},ssl:{enable:{envLink:"SERVER_SSL_ENABLE",value:!1,type:"boolean",cliName:"enableSsl",description:"Enables or disables the SSL protocol."},force:{envLink:"SERVER_SSL_FORCE",value:!1,type:"boolean",cliName:"sslForced",legacyName:"sslOnly",description:"When set to true, the server is forced to serve only over HTTPS."},port:{envLink:"SERVER_SSL_PORT",value:443,type:"number",cliName:"sslPort",description:"The port on which to run the SSL server."},certPath:{envLink:"SERVER_SSL_CERT_PATH",value:"",type:"string",legacyName:"sslPath",description:"The path to the SSL certificate/key file."}},rateLimiting:{enable:{envLink:"SERVER_RATE_LIMITING_ENABLE",value:!1,type:"boolean",cliName:"enableRateLimiting",description:"Enables rate limiting for the server."},maxRequests:{envLink:"SERVER_RATE_LIMITING_MAX_REQUESTS",value:10,type:"number",legacyName:"rateLimit",description:"The maximum number of requests allowed in one minute."},window:{envLink:"SERVER_RATE_LIMITING_WINDOW",value:1,type:"number",description:"The time window, in minutes, for the rate limiting."},delay:{envLink:"SERVER_RATE_LIMITING_DELAY",value:0,type:"number",description:"The delay duration for each successive request before reaching the maximum limit."},trustProxy:{envLink:"SERVER_RATE_LIMITING_TRUST_PROXY",value:!1,type:"boolean",description:"Set this to true if the server is behind a load balancer."},skipKey:{envLink:"SERVER_RATE_LIMITING_SKIP_KEY",value:"",type:"string",description:"Allows bypassing the rate limiter and should be provided with the skipToken argument."},skipToken:{envLink:"SERVER_RATE_LIMITING_SKIP_TOKEN",value:"",type:"string",description:"Allows bypassing the rate limiter and should be provided with the skipKey argument."}}},pool:{minWorkers:{envLink:"POOL_MIN_WORKERS",value:4,type:"number",description:"The number of minimum and initial pool workers to spawn."},maxWorkers:{envLink:"POOL_MAX_WORKERS",value:8,type:"number",legacyName:"workers",description:"The number of maximum pool workers to spawn."},workLimit:{envLink:"POOL_WORK_LIMIT",value:40,type:"number",description:"The number of work pieces that can be performed before restarting the worker process."},acquireTimeout:{envLink:"POOL_ACQUIRE_TIMEOUT",value:5e3,type:"number",description:"The duration, in milliseconds, to wait for acquiring a resource."},createTimeout:{envLink:"POOL_CREATE_TIMEOUT",value:5e3,type:"number",description:"The duration, in milliseconds, to wait for creating a resource."},destroyTimeout:{envLink:"POOL_DESTROY_TIMEOUT",value:5e3,type:"number",description:"The duration, in milliseconds, to wait for destroying a resource."},idleTimeout:{envLink:"POOL_IDLE_TIMEOUT",value:3e4,type:"number",description:"The duration, in milliseconds, after which an idle resource is destroyed."},createRetryInterval:{envLink:"POOL_CREATE_RETRY_INTERVAL",value:200,type:"number",description:"The duration, in milliseconds, to wait before retrying the create process in case of a failure."},reaperInterval:{envLink:"POOL_REAPER_INTERVAL",value:1e3,type:"number",description:"The duration, in milliseconds, after which the check for idle resources to destroy is triggered."},benchmarking:{envLink:"POOL_BENCHMARKING",value:!1,type:"boolean",cliName:"poolBenchmarking",description:"Indicate whether to show statistics for the pool of resources or not."},listenToProcessExits:{envLink:"POOL_LISTEN_TO_PROCESS_EXITS",value:!0,type:"boolean",description:"Decides whether or not to attach process.exit handlers."}},logging:{level:{envLink:"LOGGING_LEVEL",value:4,type:"number",cliName:"logLevel",description:"The logging level to be used."},file:{envLink:"LOGGING_FILE",value:"highcharts-export-server.log",type:"string",cliName:"logFile",description:"The name of a log file. The logDest option also needs to be set to enable file logging."},dest:{envLink:"LOGGING_DEST",value:"log/",type:"string",cliName:"logDest",description:"The path to store log files. This also enables file logging."}},ui:{enable:{envLink:"UI_ENABLE",value:!1,type:"boolean",cliName:"enableUi",description:"Enables or disables the user interface (UI) for the export server."},route:{envLink:"UI_ROUTE",value:"/",type:"string",cliName:"uiRoute",description:"The endpoint route to which the user interface (UI) should be attached."}},other:{noLogo:{envLink:"OTHER_NO_LOGO",value:!1,type:"boolean",description:"Skip printing the logo on a startup. Will be replaced by a simple text."}}},_={puppeteer:[{type:"list",name:"args",message:"Puppeteer arguments",initial:O.puppeteer.args.value.join(","),separator:","}],highcharts:[{type:"text",name:"version",message:"Highcharts version",initial:O.highcharts.version.value},{type:"text",name:"cdnURL",message:"The URL of CDN",initial:O.highcharts.cdnURL.value},{type:"multiselect",name:"modules",message:"Available modules",instructions:"Space: Select specific, A: Select all, Enter: Confirm.",choices:O.highcharts.modules.value},{type:"list",name:"scripts",message:"Custom scripts",initial:O.highcharts.scripts.value.join(","),separator:","},{type:"toggle",name:"forceFetch",message:"Force re-fetch the scripts",initial:O.highcharts.forceFetch.value},{type:"text",name:"cachePath",message:"The path to the cache directory",initial:O.highcharts.cachePath.value}],export:[{type:"select",name:"type",message:"The default export file type",hint:`Default: ${O.export.type.value}`,initial:0,choices:["png","jpeg","pdf","svg"]},{type:"select",name:"constr",message:"The default constructor for Highcharts",hint:`Default: ${O.export.constr.value}`,initial:0,choices:["chart","stockChart","mapChart","ganttChart"]},{type:"number",name:"defaultHeight",message:"The default fallback height of the exported chart",initial:O.export.defaultHeight.value},{type:"number",name:"defaultWidth",message:"The default fallback width of the exported chart",initial:O.export.defaultWidth.value},{type:"number",name:"defaultScale",message:"The default fallback scale of the exported chart",initial:O.export.defaultScale.value,min:.1,max:5},{type:"number",name:"rasterizationTimeout",message:"The rendering webpage timeout in milliseconds",initial:O.export.rasterizationTimeout.value}],customLogic:[{type:"toggle",name:"allowCodeExecution",message:"Enable execution of custom code",initial:O.customLogic.allowCodeExecution.value},{type:"toggle",name:"allowFileResources",message:"Enable file resources",initial:O.customLogic.allowFileResources.value}],server:[{type:"toggle",name:"enable",message:"Starts the server on 0.0.0.0",initial:O.server.enable.value},{type:"text",name:"host",message:"Server hostname",initial:O.server.host.value},{type:"number",name:"port",message:"Server port",initial:O.server.port.value},{type:"toggle",name:"benchmarking",message:"Enable server benchmarking",initial:O.server.benchmarking.value},{type:"toggle",name:"ssl.enable",message:"Enable SSL protocol",initial:O.server.ssl.enable.value},{type:"toggle",name:"ssl.force",message:"Force serving only over HTTPS",initial:O.server.ssl.force.value},{type:"number",name:"ssl.port",message:"SSL server port",initial:O.server.ssl.port.value},{type:"text",name:"ssl.certPath",message:"The path to find the SSL certificate/key",initial:O.server.ssl.certPath.value},{type:"toggle",name:"rateLimiting.enable",message:"Enable rate limiting",initial:O.server.rateLimiting.enable.value},{type:"number",name:"rateLimiting.maxRequests",message:"The maximum requests allowed per minute",initial:O.server.rateLimiting.maxRequests.value},{type:"number",name:"rateLimiting.window",message:"The rate-limiting time window in minutes",initial:O.server.rateLimiting.window.value},{type:"number",name:"rateLimiting.delay",message:"The delay for each successive request before reaching the maximum",initial:O.server.rateLimiting.delay.value},{type:"toggle",name:"rateLimiting.trustProxy",message:"Set to true if behind a load balancer",initial:O.server.rateLimiting.trustProxy.value},{type:"text",name:"rateLimiting.skipKey",message:"Allows bypassing the rate limiter when provided with the skipToken argument",initial:O.server.rateLimiting.skipKey.value},{type:"text",name:"rateLimiting.skipToken",message:"Allows bypassing the rate limiter when provided with the skipKey argument",initial:O.server.rateLimiting.skipToken.value}],pool:[{type:"number",name:"minWorkers",message:"The initial number of workers to spawn",initial:O.pool.minWorkers.value},{type:"number",name:"maxWorkers",message:"The maximum number of workers to spawn",initial:O.pool.maxWorkers.value},{type:"number",name:"workLimit",message:"The pieces of work that can be performed before restarting a Puppeteer process",initial:O.pool.workLimit.value},{type:"number",name:"acquireTimeout",message:"The number of milliseconds to wait for acquiring a resource",initial:O.pool.acquireTimeout.value},{type:"number",name:"createTimeout",message:"The number of milliseconds to wait for creating a resource",initial:O.pool.createTimeout.value},{type:"number",name:"destroyTimeout",message:"The number of milliseconds to wait for destroying a resource",initial:O.pool.destroyTimeout.value},{type:"number",name:"idleTimeout",message:"The number of milliseconds after an idle resource is destroyed",initial:O.pool.idleTimeout.value},{type:"number",name:"createRetryInterval",message:"The retry interval in milliseconds after a create process fails",initial:O.pool.createRetryInterval.value},{type:"number",name:"reaperInterval",message:"The reaper interval in milliseconds after triggering the check for idle resources to destroy",initial:O.pool.reaperInterval.value},{type:"toggle",name:"benchmarking",message:"Enable benchmarking for a resource pool",initial:O.pool.benchmarking.value},{type:"toggle",name:"listenToProcessExits",message:"Set to false to skip attaching process.exit handlers",initial:O.pool.listenToProcessExits.value}],logging:[{type:"number",name:"level",message:"The log level (0: silent, 1: error, 2: warning, 3: notice, 4: verbose, 5: benchmark)",initial:O.logging.level.value,round:0,min:0,max:5},{type:"text",name:"file",message:"A log file name. Set with the --logDest to enable file logging",initial:O.logging.file.value},{type:"text",name:"dest",message:"The path to log files. Enables file logging",initial:O.logging.dest.value}],ui:[{type:"toggle",name:"enable",message:"Enable UI for the export server",initial:O.ui.enable.value},{type:"text",name:"route",message:"A route to attach the UI",initial:O.ui.route.value}],other:[{type:"toggle",name:"noLogo",message:"Skip printing the logo on startup. Replaced by simple text",initial:O.other.noLogo.value}]},I=["options","globalOptions","themeOptions","resources","payload"],C={},A=(e,t="")=>{Object.keys(e).forEach((r=>{if(!["puppeteer","highcharts"].includes(r)){const o=e[r];void 0===o.value?A(o,`${t}.${r}`):(C[o.cliName||r]=`${t}.${r}`.substring(1),void 0!==o.legacyName&&(C[o.legacyName]=`${t}.${r}`.substring(1)))}}))};A(O);const N=["red","yellow","blue","gray","green"];let P={toConsole:!0,toFile:!1,pathCreated:!1,levelsDesc:[{title:"error",color:N[0]},{title:"warning",color:N[1]},{title:"notice",color:N[2]},{title:"verbose",color:N[3]},{title:"benchmark",color:N[4]}],listeners:[]};for(const[e,t]of Object.entries(O.logging))P[e]=t.value;const H=(e,t)=>{P.toFile&&(P.pathCreated||(!r(P.dest)&&o(P.dest),P.pathCreated=!0),i(`${P.dest}${P.file}`,[t].concat(e).join(" ")+"\n",(e=>{e&&(console.log(`[logger] Unable to write to log file: ${e}`),P.toFile=!1)})))},$=(...e)=>{const[t,...r]=e,{level:o,levelsDesc:i}=P;if(5!==t&&(0===t||t>o||o>i.length))return;const n=`${(new Date).toString().split("(")[0].trim()} [${i[t-1].title}] -`;P.listeners.forEach((e=>{e(n,r.join(" "))})),P.toConsole&&console.log.apply(void 0,[n.toString()[P.levelsDesc[t-1].color]].concat(r)),H(r,n)},j=(e,t,r)=>{const o=r||t.message,{level:i,levelsDesc:n}=P;if(0===e||e>i||i>n.length)return;const a=`${(new Date).toString().split("(")[0].trim()} [${n[e-1].title}] -`,s=t.message!==t.stackMessage||void 0===t.stackMessage?t.stack:t.stack.split("\n").slice(1).join("\n"),l=[o,"\n",s];P.toConsole&&console.log.apply(void 0,[a.toString()[P.levelsDesc[e-1].color]].concat([o[N[e-1]],"\n",s])),P.listeners.forEach((e=>{e(a,l.join(" "))})),H(l,a)},U=e=>{e>=0&&e<=P.levelsDesc.length&&(P.level=e)},M=(e,t)=>{if(P={...P,dest:e||P.dest,file:t||P.file,toFile:!0},0===P.dest.length)return $(1,"[logger] File logging initialization: no path supplied.");P.dest.endsWith("/")||(P.dest+="/")},G=m(new URL("../.",import.meta.url)),D=(e,t)=>{const r=["png","jpeg","pdf","svg"];if(t){const o=t.split(".").pop();"jpg"===o?e="jpeg":r.includes(o)&&e!==o&&(e=o)}return{"image/png":"png","image/jpeg":"jpeg","application/pdf":"pdf","image/svg+xml":"svg"}[e]||r.find((t=>t===e))||"png"},W=(e=!1,t)=>{const r=["js","css","files"];let o=e,i=!1;if(t&&e.endsWith(".json"))try{o=V(n(e,"utf8"))}catch(e){return j(2,e,"[cli] No resources found.")}else o=V(e),o&&!t&&delete o.files;for(const e in o)r.includes(e)?i||(i=!0):delete o[e];return i?(o.files&&(o.files=o.files.map((e=>e.trim())),(!o.files||o.files.length<=0)&&delete o.files),o):$(3,"[cli] No resources found.")};function V(e,t){try{const r=JSON.parse("string"!=typeof e?JSON.stringify(e):e);return"string"!=typeof r&&t?JSON.stringify(r):r}catch{return!1}}const F=e=>{if(null===e||"object"!=typeof e)return e;const t=Array.isArray(e)?[]:{};for(const r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=F(e[r]));return t},q=(e,t)=>JSON.stringify(e,((e,r)=>("string"==typeof r&&((r=r.trim()).startsWith("function(")||r.startsWith("function ("))&&r.endsWith("}")&&(r=t?`EXP_FUN${(r+"").replaceAll(/\n|\t|\r/g," ")}EXP_FUN`:void 0),"function"==typeof r?`EXP_FUN${(r+"").replaceAll(/\n|\t|\r/g," ")}EXP_FUN`:r))).replaceAll(/"EXP_FUN|EXP_FUN"/g,"");function X(){console.log("\nUsage of CLI arguments:".bold,"\n------",`\nFor more detailed information, visit the readme at: ${"https://github.com/highcharts/node-export-server#readme".bold.yellow}.`);const e=t=>{for(const[r,o]of Object.entries(t))if(Object.prototype.hasOwnProperty.call(o,"value")){let e=`  --${o.cliName||r} ${("<"+o.type+">").green} `;if(e.length<48)for(let t=e.length;t<48;t++)e+=".";console.log(e,o.description,`[Default: ${o.value.toString().bold}]`.blue)}else e(o)};Object.keys(O).forEach((t=>{["puppeteer","highcharts"].includes(t)||(console.log(`\n${t.toUpperCase()}`.red),e(O[t]))})),console.log("\n")}const K=e=>!["false","undefined","null","NaN","0",""].includes(e)&&!!e,J=(e,t)=>{if(e&&"string"==typeof e)return(e=e.trim()).endsWith(".js")?!!t&&J(n(e,"utf8")):e.startsWith("function()")||e.startsWith("function ()")||e.startsWith("()=>")||e.startsWith("() =>")?`(${e})()`:e.replace(/;$/,"")},B=()=>{const e=process.hrtime.bigint();return()=>Number(process.hrtime.bigint()-e)/1e6};e.config();const z=()=>f.enum(["true","false"]).transform((e=>"true"===e)).optional(),Y=()=>f.string().transform((e=>e.split(",").map((e=>e.trim())))).optional(),Q=f.object({HIGHCHARTS_VERSION:f.string().refine((e=>/^(latest|\d+(\.\d+){0,2})$/.test(e)),{message:"HIGHCHARTS_VERSION must be 'latest', a major version, or in the form XX.YY.ZZ"}).optional(),HIGHCHARTS_CDN_URL:f.string().trim().refine((e=>e.startsWith("https://")||e.startsWith("http://")),{message:"Invalid value for HIGHCHARTS_CDN_URL. It should start with http:// or https://."}).optional(),HIGHCHARTS_CORE_SCRIPTS:Y(),HIGHCHARTS_MODULES:Y(),HIGHCHARTS_INDICATORS:Y(),HIGHCHARTS_FORCE_FETCH:z(),HIGHCHARTS_CACHE_PATH:f.string().optional(),HIGHCHARTS_ADMIN_TOKEN:f.string().optional(),EXPORT_TYPE:f.enum(["jpeg","png","pdf","svg"]).optional(),EXPORT_CONSTR:f.string().refine((e=>["chart","stockChart","mapChart","ganttChart"].includes(e||"")),{message:"Invalid value for EXPORT_CONSTR. "}).optional(),EXPORT_DEFAULT_HEIGHT:f.coerce.number().positive().optional(),EXPORT_DEFAULT_WIDTH:f.coerce.number().positive().optional(),EXPORT_DEFAULT_SCALE:f.coerce.number().positive().optional(),EXPORT_RASTERIZATION_TIMEOUT:f.coerce.number().positive().optional(),CUSTOM_LOGIC_ALLOW_CODE_EXECUTION:z(),CUSTOM_LOGIC_ALLOW_FILEL_RESOURCES:z(),SERVER_ENABLE:z(),SERVER_HOST:f.string().optional(),SERVER_PORT:f.coerce.number().optional(),SERVER_BENCHMARKING:z(),SERVER_SSL_ENABLE:z(),SERVER_SSL_FORCE:z(),SERVER_SSL_PORT:f.coerce.number().optional(),SERVER_SSL_CERT_PATH:f.string().optional(),SERVER_RATE_LIMITING_ENABLE:z(),SERVER_RATE_LIMITING_MAX_REQUESTS:f.coerce.number().optional(),SERVER_RATE_LIMITING_WINDOW:f.coerce.number().optional(),SERVER_RATE_LIMITING_DELAY:f.coerce.number().optional(),SERVER_RATE_LIMITING_TRUST_PROXY:z(),SERVER_RATE_LIMITING_SKIP_KEY:f.string().optional(),SERVER_RATE_LIMITING_SKIP_TOKEN:f.string().optional(),POOL_MIN_WORKERS:f.coerce.number().optional(),POOL_MAX_WORKERS:f.coerce.number().optional(),POOL_WORK_LIMIT:f.coerce.number().optional(),POOL_ACQUIRE_TIMEOUT:f.coerce.number().optional(),POOL_CREATE_TIMEOUT:f.coerce.number().optional(),POOL_DESTROY_TIMEOUT:f.coerce.number().optional(),POOL_IDLE_TIMEOUT:f.coerce.number().optional(),POOL_CREATE_RETRY_INTERVAL:f.coerce.number().optional(),POOL_REAPER_INTERVAL:f.coerce.number().optional(),POOL_BENCHMARKING:z(),POOL_LISTEN_TO_PROCESS_EXITS:z(),LOGGING_LEVEL:f.coerce.number().optional().refine((e=>(e||4)>=0&&(e||4)<=4),{message:"Invalid value for LOGGING_LEVEL. We only accept 0, 1, 2, 3, 4 as logging levels."}),LOGGING_FILE:f.string().optional(),LOGGING_DEST:f.string().optional(),UI_ENABLE:z(),UI_ROUTE:f.string().optional(),OTHER_NO_LOGO:z(),NODE_ENV:f.enum(["development","production","test"]).optional().default("production"),PROXY_SERVER_TIMEOUT:f.coerce.number().positive().optional().default(5e3),PROXY_SERVER_HOST:f.string().optional().default("localhost"),PROXY_SERVER_PORT:f.coerce.number().positive().optional().default(8080)}).parse(process.env);class Z extends Error{constructor(e){super(),this.message=e,this.stackMessage=e}setError(e){return this.error=e,e.name&&(this.name=e.name),e.statusCode&&(this.statusCode=e.statusCode),e.stack&&(this.stackMessage=e.message,this.stack=e.stack),this}}const ee={cdnURL:"https://code.highcharts.com/",activeManifest:{},sources:"",hcVersion:""};let te=!1;const re=e=>e.sources.substring(0,e.sources.indexOf("*/")).replace("/*","").replace("*/","").replace(/\n/g,"").trim(),oe=async(e,t,r,o=!1)=>{e.endsWith(".js")&&(e=e.substring(0,e.length-3)),$(4,`[cache] Fetching script - ${e}.js`);const i=t?{agent:t,timeout:Q.PROXY_SERVER_TIMEOUT}:{},n=await x(`${e}.js`,i);if(200===n.statusCode&&"string"==typeof n.text){if(r){r[e.replace(/(.*)\/|(.*)modules\/|stock\/(.*)indicators\/|maps\/(.*)modules\//gi,"")]=1}return n.text}if(o)throw new Z(`Could not fetch the ${e}.js. The script might not exist in the requested version (status code: ${n.statusCode}).`).setError(n);return $(2,`[cache] Could not fetch the ${e}.js. The script might not exist in the requested version.`),""},ie=async(e,t)=>{const{coreScripts:r,modules:o,indicators:i,scripts:n}=e,s="latest"!==e.version&&e.version?`${e.version}/`:"";let l;$(3,`[cache] Updating cache version to Highcharts: ${s||"latest"}.`);const c=process.env.PROXY_SERVER_HOST,p=process.env.PROXY_SERVER_PORT;if(c&&p)try{l=new h({host:c,port:+p})}catch(e){throw new Z("[cache] Could not create a Proxy Agent.").setError(e)}const u={};try{return ee.sources=await(async(e,t,r,o,i,n)=>{const a=[...e.map((e=>oe(`${o}${e}`,i,n,!0))),...t.map((e=>oe(`${o}${e}`,i,n))),...r.map((e=>oe(`${e}`,i)))];return(await Promise.all(a)).join(";\n")})([...r.map((e=>`${s}${e}`))],[...o.map((e=>"map"===e?`maps/${s}modules/${e}`:`${s}modules/${e}`)),...i.map((e=>`stock/${s}indicators/${e}`))],n,e.cdnURL||ee.cdnURL,l,u),ee.hcVersion=re(ee),a(t,ee.sources),u}catch(e){throw new Z("[cache] Unable to update the local Highcharts cache.").setError(e)}},ne=async e=>{const t=c(G,e.cachePath);let i;const s=c(t,"manifest.json"),l=c(t,"sources.js");if(te=e,!r(t)&&o(t),!r(s)||e.forceFetch)$(3,"[cache] Fetching and caching Highcharts dependencies."),i=await ie(e,l);else{let t=!1;const r=JSON.parse(n(s));if(r.modules&&Array.isArray(r.modules)){const e={};r.modules.forEach((t=>e[t]=1)),r.modules=e}const{modules:o,coreScripts:a,indicators:c}=e,p=o.length+a.length+c.length;r.version!==e.version?($(2,"[cache] A Highcharts version mismatch in the cache, need to re-fetch."),t=!0):Object.keys(r.modules||{}).length!==p?($(2,"[cache] The cache and the requested modules do not match, need to re-fetch."),t=!0):t=(e.modules||[]).some((e=>{if(!r.modules[e])return $(2,`[cache] The ${e} is missing in the cache, need to re-fetch.`),!0})),t?i=await ie(e,l):($(3,"[cache] Dependency cache is up to date, proceeding."),ee.sources=n(l,"utf8"),i=r.modules,ee.hcVersion=re(ee))}await(async(e,t)=>{const r={version:e.version,modules:t||{}};ee.activeManifest=r,$(3,"[cache] Writing a new manifest.");try{a(c(G,e.cachePath,"manifest.json"),JSON.stringify(r),"utf8")}catch(e){throw new Z("[cache] Error writing the cache manifest.").setError(e)}})(e,i)},ae=()=>c(G,te.cachePath);var se=async e=>!!te&&await ne(Object.assign(te,{version:e})),le=()=>ee,ce=()=>ee.hcVersion;let pe={};const he=()=>pe,ue=(e,t,r=[])=>{const o=F(e);for(const[e,n]of Object.entries(t))o[e]="object"!=typeof(i=n)||Array.isArray(i)||null===i||r.includes(e)||void 0===o[e]?void 0!==n?n:o[e]:ue(o[e],n,r);var i;return o};function de(e,t={},r=""){Object.keys(e).forEach((o=>{const i=e[o],n=t&&t[o];void 0===i.value?de(i,n,`${r}.${o}`):(void 0!==n&&(i.value=n),i.envLink in Q&&(i.value=Q[i.envLink]))}))}function ge(e){let t={};for(const[r,o]of Object.entries(e))t[r]=Object.prototype.hasOwnProperty.call(o,"value")?o.value:ge(o);return t}function me(e,t,r){for(;t.length>1;){const o=t.shift();return Object.prototype.hasOwnProperty.call(e,o)||(e[o]={}),e[o]=me(Object.assign({},e[o]),t,r),e}return e[t[0]]=r,e}const fe=T(64).toString("base64url"),ve=w.join("tmp",`puppeteer-${fe}`),ye=[`--user-data-dir=${w.join(ve,"profile")}`,"--autoplay-policy=user-gesture-required","--disable-background-networking","--disable-background-timer-throttling","--disable-backgrounding-occluded-windows","--disable-breakpad","--disable-client-side-phishing-detection","--disable-component-update","--disable-default-apps","--disable-dev-shm-usage","--disable-domain-reliability","--disable-extensions","--disable-features=AudioServiceOutOfProcess","--disable-hang-monitor","--disable-ipc-flooding-protection","--disable-notifications","--disable-offer-store-unmasked-wallet-cards","--disable-popup-blocking","--disable-print-preview","--disable-prompt-on-repost","--disable-renderer-backgrounding","--disable-session-crashed-bubble","--disable-setuid-sandbox","--disable-speech-api","--disable-sync","--hide-crash-restore-bubble","--hide-scrollbars","--ignore-gpu-blacklist","--metrics-recording-only","--mute-audio","--no-default-browser-check","--no-first-run","--no-pings","--no-sandbox","--no-zygote","--password-store=basic","--use-mock-keychain"],be=g.fileURLToPath(new URL(".",import.meta.url)),we=t.readFileSync(be+"/../templates/template.html","utf8");let Ee;const Te=async e=>{await e.setContent(we),await e.addScriptTag({path:`${ae()}/sources.js`}),await e.evaluate((()=>window.setupHighcharts())),e.on("pageerror",(async t=>{await e.$eval("#container",((e,t)=>{window._displayErrors&&(e.innerHTML=t)}),`<h1>Chart input data error</h1>${t.toString()}`)}))},Re=async(e,t=!1)=>{try{t?(await e.goto("about:blank"),await Te(e)):await e.evaluate((()=>{document.body.innerHTML='<div id="chart-container"><div id="container"></div></div>'}))}catch(e){j(2,e,"[browser] Could not clear the content of the page.")}},Se=async()=>{if(!Ee)return!1;const e=await Ee.newPage();return await e.setCacheEnabled(!1),await Te(e),e},ke=async()=>(Ee?.isConnected()&&(await Ee.close(),$(4,"[browser] Closed the browser.")),!0);const Le=g.fileURLToPath(new URL(".",import.meta.url)),xe=(e,t,r)=>e.evaluate(((e,t)=>window.triggerExport(e,t)),t,r);var Oe=async(e,t,r)=>{const o=[],i=async e=>{for(const e of o)await e.dispose();await e.evaluate((()=>{const[,...e]=document.getElementsByTagName("script"),[,...t]=document.getElementsByTagName("style"),[...r]=document.getElementsByTagName("link");for(const o of[...e,...t,...r])o.remove()}))};try{$(4,"[export] Determining export path.");const a=r.export;await e.evaluate((()=>requestAnimationFrame((()=>{}))));const s=a?.options?.chart?.displayErrors&&le().activeManifest.modules.debugger;let c;if(await e.evaluate((e=>window._displayErrors=e),s),t.indexOf&&(t.indexOf("<svg")>=0||t.indexOf("<?xml")>=0)){if($(4,"[export] Treating as SVG."),"svg"===a.type)return t;c=!0,await e.setContent((e=>`\n<!DOCTYPE html>\n<html lang='en-US'>\n  <head>\n    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">\n    <title>Highcarts Export</title>\n  </head>\n  <style>\n    \n\nhtml, body {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n#table-div, #sliders, #datatable, #controls, .ld-row {\n  display: none;\n  height: 0;\n}\n\n#chart-container {\n  box-sizing: border-box;\n  margin: 0;\n  overflow: auto;\n  font-size: 0;\n}\n\n#chart-container > figure, div {\n  margin-top: 0 !important;\n  margin-bottom: 0 !important;\n}\n\n\n  </style>\n  <body>\n    <div id="chart-container">\n      ${e}\n    </div>\n  </body>\n</html>\n\n`)(t))}else $(4,"[export] Treating as config."),a.strInj?await xe(e,{chart:{height:a.height,width:a.width}},r):(t.chart.height=a.height,t.chart.width=a.width,await xe(e,t,r));const p=r.customLogic.resources;if(p){if(p.js&&o.push(await e.addScriptTag({content:p.js})),p.files)for(const t of p.files)try{const r=!t.startsWith("http");o.push(await e.addScriptTag(r?{content:n(t,"utf8")}:{url:t}))}catch(e){j(2,e,`[export] The JS file ${t} cannot be loaded.`)}if(p.css){let t=p.css.match(/@import\s*([^;]*);/g);if(t)for(let i of t)i&&(i=i.replace("url(","").replace("@import","").replace(/"/g,"").replace(/'/g,"").replace(/;/,"").replace(/\)/g,"").trim(),i.startsWith("http")?o.push(await e.addStyleTag({url:i})):r.customLogic.allowFileResources&&o.push(await e.addStyleTag({path:l.join(Le,i)})));o.push(await e.addStyleTag({content:p.css.replace(/@import\s*([^;]*);/g,"")||" "}))}}const h=c?await e.$eval("#chart-container svg:first-of-type",((e,t)=>({chartHeight:e.height.baseVal.value*t,chartWidth:e.width.baseVal.value*t})),parseFloat(a.scale)):await e.evaluate((()=>{const{chartHeight:e,chartWidth:t}=window.Highcharts.charts[0];return{chartHeight:e,chartWidth:t}})),u=Math.ceil(h?.chartHeight||a.height),d=Math.ceil(h?.chartWidth||a.width);await e.setViewport({height:u,width:d,deviceScaleFactor:c?1:parseFloat(a.scale)});const g=c?e=>{document.body.style.zoom=e,document.body.style.margin="0px"}:()=>{document.body.style.zoom=1};await e.evaluate(g,parseFloat(a.scale));const{height:m,width:f,x:v,y:y}=await(e=>e.$eval("#chart-container",(e=>{const{x:t,y:r,width:o,height:i}=e.getBoundingClientRect();return{x:t,y:r,width:o,height:Math.trunc(i>1?i:500)}})))(e);let b;if(c||await e.setViewport({width:Math.round(f),height:Math.round(m),deviceScaleFactor:parseFloat(a.scale)}),"svg"===a.type)b=await(e=>e.$eval("#container svg:first-of-type",(e=>e.outerHTML)))(e);else if(["png","jpeg"].includes(a.type))b=await((e,t,r,o,i)=>Promise.race([e.screenshot({type:t,encoding:r,clip:o,omitBackground:"png"==t}),new Promise(((e,t)=>setTimeout((()=>t(new Z("Rasterization timeout"))),i||1500)))]))(e,a.type,"base64",{width:d,height:u,x:v,y:y},a.rasterizationTimeout);else{if("pdf"!==a.type)throw new Z(`[export] Unsupported output format ${a.type}.`);b=await((e,t,r,o)=>e.pdf({height:t+1,width:r,encoding:o}))(e,u,d,"base64")}return await e.evaluate((()=>{if("undefined"!=typeof Highcharts){const e=Highcharts.charts;if(Array.isArray(e)&&e.length)for(const t of e)t&&t.destroy(),Highcharts.charts.shift()}})),await i(e),b}catch(t){return await i(e),t}};let _e,Ie=0,Ce=0,Ae=0,Ne=0,Pe=0,He={},$e=!1;const je={create:async()=>{let e=!1;const t=b(),r=(new Date).getTime();try{if(e=await Se(),!e||e.isClosed())throw new Z("The page is invalid or closed.");$(3,`[pool] Successfully created a worker ${t} - took ${(new Date).getTime()-r} ms.`)}catch(e){throw new Z("Error encountered when creating a new page.").setError(e)}return{id:t,page:e,workCount:Math.round(Math.random()*(He.workLimit/2))}},validate:async e=>He.workLimit&&++e.workCount>He.workLimit?($(3,`[pool] Worker failed validation: exceeded work limit (limit is ${He.workLimit}).`),!1):(await Re(e.page,!0),!0),destroy:e=>{$(3,`[pool] Destroying pool entry ${e.id}.`),e.page&&e.page.close()}},Ue=async e=>{if(He=e&&e.pool?{...e.pool}:{},He.listenToProcessExits&&($(3,"[pool] Attaching exit listeners to the process."),process.on("exit",(async e=>{$(4,`Process exited with code ${e}.`),await Me()})),process.on("SIGINT",((e,t)=>{$(4,`The ${e} event with code: ${t}.`),process.exit(1)})),process.on("SIGTERM",((e,t)=>{$(4,`The ${e} event with code: ${t}.`),process.exit(1)})),process.on("uncaughtException",(async(e,t)=>{j(1,e,`The ${t} error.`),await Me(),process.exit(1)}))),_e=e.puppeteerArgs,await(async e=>{const t=[...ye,...e||[]];if(!Ee){let e=0;const r=async()=>{try{$(3,`[browser] Attempting to get a browser instance (try ${++e}).`),Ee=await E.launch({headless:"new",args:t,userDataDir:"./tmp/"})}catch(t){if(j(1,t,"[browser] Failed to launch a browser instance."),!(e<25))throw t;$(3,`[browser] Retry to open a browser (${e} out of 25).`),await new Promise((e=>setTimeout(e,4e3))),await r()}};try{await r()}catch(e){throw new Z("[browser] Maximum retries to open a browser instance reached.").setError(e)}if(!Ee)throw new Z("[browser] Cannot find a browser to open.")}return Ee})(_e),$(3,`[pool] Initializing pool with workers: min ${He.minWorkers}, max ${He.maxWorkers}.`),$e)return $(4,"[pool] Already initialized, please kill it before creating a new one.");parseInt(He.minWorkers)>parseInt(He.maxWorkers)&&(He.minWorkers=He.maxWorkers);try{$e=new y({...je,min:parseInt(He.minWorkers),max:parseInt(He.maxWorkers),acquireTimeoutMillis:He.acquireTimeout,createTimeoutMillis:He.createTimeout,destroyTimeoutMillis:He.destroyTimeout,idleTimeoutMillis:He.idleTimeout,createRetryIntervalMillis:He.createRetryInterval,reapIntervalMillis:He.reaperInterval,propagateCreateError:!1}),$e.on("release",(async e=>{await Re(e.page,!1),$(4,`[pool] Releasing a worker with ID ${e.id}.`)})),$e.on("destroySuccess",((e,t)=>{$(4,`[pool] Destroyed a worker with ID ${t.id}.`)}));const e=[];for(let t=0;t<He.minWorkers;t++)try{const t=await $e.acquire().promise;e.push(t)}catch(e){j(2,e,"[pool] Could not create an initial resource.")}e.forEach((e=>{$e.release(e)})),$(3,"[pool] The pool is ready"+(e.length?` with ${e.length} initial resources waiting.`:"."))}catch(e){throw await ke(),new Z("[pool] Could not create the pool of workers.").setError(e)}};async function Me(){return $(3,"[pool] Killing all pool workers and browser, if any exist."),$e?.destroyed||$e&&(await $e.destroy(),$(4,"[browser] Destroyed the pool of resources.")),ke()}const Ge=async(e,t)=>{let r;try{if($(4,"[pool] Work received, starting to process."),++Ce,He.benchmarking&&De(),!$e)throw new Z("Work received, but pool has not been started.");try{$(4,"[pool] Acquiring a worker handle.");const e=B();r=await $e.acquire().promise,t.server.benchmarking&&$(5,t.payload?.requestId?`[benchmark] Request with ID ${t.payload?.requestId} -`:"[benchmark]",`Acquired a worker handle: ${e()}ms.`)}catch(e){throw new Z("Error encountered when acquiring an available entry.").setError(e)}if($(4,"[pool] Acquired a worker handle."),!r.page)throw new Z("Resolved worker page is invalid: the pool setup is wonky.");let o=(new Date).getTime();$(4,`[pool] Starting work on pool entry with ID ${r.id}.`);const i=B(),n=await Oe(r.page,e,t);if(n instanceof Error)throw"Rasterization timeout"===n.message&&(r.page.close(),r.page=await Se()),new Z("Error encountered during export.").setError(n);t.server.benchmarking&&$(5,t.payload?.requestId?`[benchmark] Request with ID ${t.payload?.requestId} -`:"[benchmark]",`Exported a chart sucessfully: ${i()}ms.`),$e.release(r);const a=(new Date).getTime()-o;return Ae+=a,Pe=Ae/++Ie,$(4,`[pool] Work completed in ${a} ms.`),{result:n,options:t}}catch(e){throw++Ne,r&&$e.release(r),new Z(`[pool] In pool.postWork: ${e.message}`).setError(e)}};function De(){const{min:e,max:t}=$e;$(5,`[pool] The minimum number of resources allowed by pool: ${e}.`),$(5,`[pool] The maximum number of resources allowed by pool: ${t}.`),$(5,`[pool] The number of resources that are currently available: ${$e.numFree()}.`),$(5,`[pool] The number of resources that are currently acquired: ${$e.numUsed()}.`),$(5,`[pool] The number of callers waiting to acquire a resource: ${$e.numPendingAcquires()}.`)}var We=()=>({min:$e.min,max:$e.max,available:$e.numFree(),inUse:$e.numUsed(),pendingAcquire:$e.numPendingAcquires()}),Ve=()=>Ce,Fe=()=>Ne,qe=()=>Pe,Xe=()=>Ie;let Ke=!1;const Je=async(e,t)=>{$(4,"[chart] Starting the exporting process.");const r=((e,t={})=>{let r={};return e.svg?(r=F(t),r.export.type=e.type||e.export.type,r.export.scale=e.scale||e.export.scale,r.export.outfile=e.outfile||e.export.outfile,r.payload={svg:e.svg}):r=ue(t,e,I),r.export.outfile=r.export?.outfile||`chart.${r.export?.type||"png"}`,r})(e,he()),o=r.export;if(r.payload?.svg&&""!==r.payload.svg)try{return $(4,"[chart] Attempting to export from a SVG input."),Qe(r.payload.svg.trim(),r,t)}catch(e){return t(new Z("[chart] Error loading SVG input.").setError(e))}if(o.infile&&o.infile.length)try{return $(4,"[chart] Attempting to export from an input file."),r.export.instr=n(o.infile,"utf8"),Qe(r.export.instr.trim(),r,t)}catch(e){return t(new Z("[chart] Error loading input file.").setError(e))}if(o.instr&&""!==o.instr||o.options&&""!==o.options)try{return $(4,"[chart] Attempting to export from a raw input."),K(r.customLogic?.allowCodeExecution)?Ye(r,t):"string"==typeof o.instr?Qe(o.instr.trim(),r,t):ze(r,o.instr||o.options,t)}catch(e){return t(new Z("[chart] Error loading raw input.").setError(e))}return t(new Z("[chart] No valid input specified. Check if at least one of the following parameters is correctly set: 'infile', 'instr', 'options', or 'svg'."))},Be=e=>{const{chart:t,exporting:r}=e.export?.options||V(e.export?.instr),o=V(e.export?.globalOptions);let i=e.export?.scale||r?.scale||o?.exporting?.scale||e.export?.defaultScale||1;i=Math.max(.1,Math.min(i,5)),i=((e,t=1)=>{const r=Math.pow(10,t||0);return Math.round(+e*r)/r})(i,2);const n={height:e.export?.height||r?.sourceHeight||t?.height||o?.exporting?.sourceHeight||o?.chart?.height||e.export?.defaultHeight||400,width:e.export?.width||r?.sourceWidth||t?.width||o?.exporting?.sourceWidth||o?.chart?.width||e.export?.defaultWidth||600,scale:i};for(let[e,t]of Object.entries(n))n[e]="string"==typeof t?+t.replace(/px|%/gi,""):t;return n},ze=async(e,t,r,o)=>{let{export:i,customLogic:a}=e;const s="boolean"==typeof a.allowCodeExecution?a.allowCodeExecution:Ke;if(a){if(s)if("string"==typeof e.customLogic.resources)e.customLogic.resources=W(e.customLogic.resources,K(e.customLogic.allowFileResources));else if(!e.customLogic.resources)try{const t=n("resources.json","utf8");e.customLogic.resources=W(t,K(e.customLogic.allowFileResources))}catch(e){j(2,e,"[chart] Unable to load the default resources.json file.")}}else a=e.customLogic={};if(!s&&a){if(a.callback||a.resources||a.customCode)return r(new Z("[chart] The 'callback', 'resources' and 'customCode' options have been disabled for this server."));a.callback=!1,a.resources=!1,a.customCode=!1}if(t&&(t.chart=t.chart||{},t.exporting=t.exporting||{},t.exporting.enabled=!1),i.constr=i.constr||"chart",i.type=D(i.type,i.outfile),"svg"===i.type&&(i.width=!1),["globalOptions","themeOptions"].forEach((e=>{try{i&&i[e]&&("string"==typeof i[e]&&i[e].endsWith(".json")?i[e]=V(n(i[e],"utf8"),!0):i[e]=V(i[e],!0))}catch(t){i[e]={},j(2,t,`[chart] The '${e}' cannot be loaded.`)}})),a.allowCodeExecution)try{a.customCode=J(a.customCode,a.allowFileResources)}catch(e){j(2,e,"[chart] The 'customCode' cannot be loaded.")}if(a&&a.callback&&a.callback?.indexOf("{")<0)if(a.allowFileResources)try{a.callback=n(a.callback,"utf8")}catch(e){a.callback=!1,j(2,e,"[chart] The 'callback' cannot be loaded.")}else a.callback=!1;e.export={...e.export,...Be(e)};try{return r(!1,await Ge(i.strInj||t||o,e))}catch(e){return r(e)}},Ye=(e,t)=>{try{let r,o=e.export.instr||e.export.options;return"string"!=typeof o&&(r=o=q(o,e.customLogic?.allowCodeExecution)),r=o.replaceAll(/\t|\n|\r/g,"").trim(),";"===r[r.length-1]&&(r=r.substring(0,r.length-1)),e.export.strInj=r,ze(e,!1,t)}catch(r){return t(new Z(`[chart] Malformed input detected for ${e.export?.requestId||"?"}. Please make sure that your JSON/JavaScript options are sent using the "options" attribute, and that if you're using SVG, it is unescaped.`).setError(r))}},Qe=(e,t,r)=>{const{allowCodeExecution:o}=t.customLogic;if(e.indexOf("<svg")>=0||e.indexOf("<?xml")>=0)return $(4,"[chart] Parsing input as SVG."),ze(t,!1,r,e);try{const o=JSON.parse(e.replaceAll(/\t|\n|\r/g," "));return ze(t,o,r)}catch(e){return K(o)?Ye(t,r):r(new Z("[chart] Only JSON configurations and SVG are allowed for this server. If this is your server, JavaScript custom code can be enabled by starting the server with the --allowCodeExecution flag.").setError(e))}},Ze=(e,t,r,o)=>{j(1,e),"development"!==Q.NODE_ENV&&delete e.stack,o(e)},et=(e,t,r,o)=>{const{statusCode:i,status:n,message:a,stack:s}=e,l=i||n||500;r.status(l).json({statusCode:l,message:a,stack:s})};var tt=(e,t)=>{const r="Too many requests, you have been rate limited. Please try again later.",o={max:t.maxRequests||30,window:t.window||1,delay:t.delay||0,trustProxy:t.trustProxy||!1,skipKey:t.skipKey||!1,skipToken:t.skipToken||!1};o.trustProxy&&e.enable("trust proxy");const i=L({windowMs:60*o.window*1e3,max:o.max,delayMs:o.delay,handler:(e,t)=>{t.format({json:()=>{t.status(429).send({message:r})},default:()=>{t.status(429).send(r)}})},skip:e=>!1!==o.skipKey&&!1!==o.skipToken&&e.query.key===o.skipKey&&e.query.access_token===o.skipToken&&($(4,"[rate limiting] Skipping rate limiter."),!0)});e.use(i),$(3,`[rate limiting] Enabled rate limiting with ${o.max} requests per ${o.window} minute for each IP, trusting proxy: ${o.trustProxy}.`)};class rt extends Z{constructor(e,t){super(e),this.status=this.statusCode=t}setStatus(e){return this.status=e,this}}const ot={png:"image/png",jpeg:"image/jpeg",gif:"image/gif",pdf:"application/pdf",svg:"image/svg+xml"};let it=0;const nt=[],at=[],st=(e,t,r,o)=>{let i=!0;const{id:n,uniqueId:a,type:s,body:l}=o;return e.some((e=>{if(e){let o=e(t,r,n,a,s,l);return void 0!==o&&!0!==o&&(i=o),!0}})),i},lt=async(e,t,r)=>{try{const r=B(),i=b().replace(/-/g,""),n=he(),a=e.body,s=++it;let l=D(a.type);if(!a||"object"==typeof(o=a)&&!Array.isArray(o)&&null!==o&&0===Object.keys(o).length)throw new rt("The request body is required. Please ensure that your Content-Type header is correct (accepted types are application/json and multipart/form-data).",400);let c=V(a.infile||a.options||a.data);if(!c&&!a.svg)throw $(2,`The request with ID ${i} from ${e.headers["x-forwarded-for"]||e.connection.remoteAddress} was incorrect. Payload received: ${JSON.stringify(a)}.`),new rt("No correct chart data found. Ensure that you are using either application/json or multipart/form-data headers. If sending JSON, make sure the chart data is in the 'infile', 'options', or 'data' attribute. If sending SVG, ensure it is in the 'svg' attribute.",400);let p=!1;if(p=st(nt,e,t,{id:s,uniqueId:i,type:l,body:a}),!0!==p)return t.send(p);let h=!1;e.socket.on("close",(()=>{h=!0})),$(4,`[export] Got an incoming HTTP request with ID ${i}.`),a.constr="string"==typeof a.constr&&a.constr||"chart";const u={export:{instr:c,type:l,constr:a.constr[0].toLowerCase()+a.constr.substr(1),height:a.height,width:a.width,scale:a.scale||n.export.scale,globalOptions:V(a.globalOptions,!0),themeOptions:V(a.themeOptions,!0)},customLogic:{allowCodeExecution:Ke,allowFileResources:!1,resources:V(a.resources,!0),callback:a.callback,customCode:a.customCode}};c&&(u.export.instr=q(c,u.customLogic.allowCodeExecution));const d=ue(n,u);if(d.export.options=c,d.payload={svg:a.svg||!1,b64:a.b64||!1,noDownload:a.noDownload||!1,requestId:i},a.svg&&(e=>[/xlink:href="(?:http:\/\/|https:\/\/)?localhost\b/,/xlink:href="(?:http:\/\/|https:\/\/)?10\.\d{1,3}\.\d{1,3}\.\d{1,3}\b/,/xlink:href="(?:http:\/\/|https:\/\/)?127\.\d{1,3}\.\d{1,3}\.\d{1,3}\b/,/xlink:href="(?:http:\/\/|https:\/\/)?172\.(1[6-9]|2[0-9]|3[0-1])\.\d{1,3}\.\d{1,3}\b/,/xlink:href="(?:http:\/\/|https:\/\/)?192\.168\.\d{1,3}\.\d{1,3}\b/].some((t=>t.test(e))))(d.payload.svg))throw new rt("SVG potentially contain at least one forbidden URL in xlink:href element. Please review the SVG content and ensure that all referenced URLs comply with security policies.",400);await Je(d,((o,c)=>{if(e.socket.removeAllListeners("close"),n.server.benchmarking&&$(5,`[benchmark] Request with ID ${i} - After the whole exporting process: ${r()}ms.`),h)return $(3,"[export] The client closed the connection before the chart finished processing.");if(o)throw o;if(!c||!c.result)throw new rt(`Unexpected return from chart generation. Please check your request data. For the request with ID ${i}, the result is ${c.result}.`,400);return l=c.options.export.type,st(at,e,t,{id:s,body:c.result}),c.result?a.b64?"pdf"===l||"svg"==l?t.send(Buffer.from(c.result,"utf8").toString("base64")):t.send(c.result):(t.header("Content-Type",ot[l]||"image/png"),a.noDownload||t.attachment(`${e.params.filename||e.body.filename||"chart"}.${l||"png"}`),"svg"===l?t.send(c.result):t.send(Buffer.from(c.result,"base64"))):void 0}))}catch(e){r(e)}var o};const ct=JSON.parse(n(c(G,"package.json"))),pt=new Date;const ht=S();ht.disable("x-powered-by"),ht.use(R());const ut=k.memoryStorage(),dt=k({storage:ut,limits:{fieldSize:52428800}});ht.use(S.json({limit:52428800})),ht.use(S.urlencoded({extended:!0,limit:52428800})),ht.use(dt.none());const gt=e=>{e.on("clientError",(e=>{j(1,e,`[server] Client error: ${e.message}`)})),e.on("error",(e=>{j(1,e,`[server] Server error: ${e.message}`)})),e.on("connection",(e=>{e.on("error",(e=>{j(1,e,`[server] Socket error: ${e.message}`)}))}))},mt=async e=>{try{if(!e.enable)return!1;if(!e.ssl.force){const t=u.createServer(ht);gt(t),t.listen(e.port,e.host),$(3,`[server] Started HTTP server on ${e.host}:${e.port}.`)}if(e.ssl.enable){let t,r;try{t=await s.readFile(p.join(e.ssl.certPath,"server.key"),"utf8"),r=await s.readFile(p.join(e.ssl.certPath,"server.crt"),"utf8")}catch(t){$(2,`[server] Unable to load key/certificate from the '${e.ssl.certPath}' path. Could not run secured layer server.`)}if(t&&r){const o=d.createServer({key:t,cert:r},ht);gt(o),o.listen(e.ssl.port,e.host),$(3,`[server] Started HTTPS server on ${e.host}:${e.ssl.port}.`)}}e.rateLimiting&&e.rateLimiting.enable&&![0,NaN].includes(e.rateLimiting.maxRequests)&&tt(ht,e.rateLimiting),ht.use(S.static(p.join(G,"public"))),(e=>{!!e&&e.get("/health",((e,t)=>{t.send({status:"OK",bootTime:pt,uptime:Math.floor(((new Date).getTime()-pt.getTime())/1e3/60)+" minutes",version:ct.version,highchartsVersion:ce(),averageProcessingTime:qe(),performedExports:Xe(),failedExports:Fe(),exportAttempts:Ve(),sucessRatio:Xe()/Ve()*100,pool:We()})}))})(ht),(e=>{e.post("/",lt),e.post("/:filename",lt)})(ht),(e=>{!!e&&e.get("/",((e,t)=>{t.sendFile(c(G,"public","index.html"))}))})(ht),(e=>{!!e&&e.post("/version/change/:newVersion",(async(e,t,r)=>{try{const r=Q.HIGHCHARTS_ADMIN_TOKEN;if(!r||!r.length)throw new rt("The server is not configured to perform run-time version changes: HIGHCHARTS_ADMIN_TOKEN is not set.",401);const o=e.get("hc-auth");if(!o||o!==r)throw new rt("Invalid or missing token: Set the token in the hc-auth header.",401);const i=e.params.newVersion;if(!i)throw new rt("No new version supplied.",400);try{await se(i)}catch(e){throw new rt(`Version change: ${e.message}`,e.statusCode).setError(e)}t.status(200).send({statusCode:200,version:ce(),message:`Successfully updated Highcharts to version: ${i}.`})}catch(e){r(e)}}))})(ht),(e=>{e.use(Ze),e.use(et)})(ht)}catch(e){throw new Z("[server] Could not configure and start the server.").setError(e)}};var ft={startServer:mt,enableRateLimiting:e=>tt(ht,e),getExpress:()=>S,getApp:()=>ht,use:(e,...t)=>{ht.use(e,...t)},get:(e,...t)=>{ht.get(e,...t)},post:(e,...t)=>{ht.post(e,...t)}};e.config();var vt={server:ft,startServer:mt,setOptions:(e,t)=>(t?.length&&(pe=function(e){const t=e.findIndex((e=>"loadConfig"===e.replace(/-/g,"")));if(t>-1&&e[t+1]){const r=e[t+1];try{if(r&&r.endsWith(".json"))return JSON.parse(n(r))}catch(e){j(2,e,`[config] Unable to load the configuration from the ${r} file.`)}}return{}}(t)),de(O,pe),pe=ge(O),e&&(pe=ue(pe,e,I)),t?.length&&(pe=function(e,t,r){let o=!1;for(let i=0;i<t.length;i++){const n=t[i].replace(/-/g,""),a=C[n]?C[n].split("."):[];let s;a.reduce(((e,t,r)=>(a.length-1===r&&(s=e[t].type),e[t])),r),a.reduce(((e,r,l)=>(a.length-1===l&&void 0!==e[r]&&(t[++i]?"boolean"===s?e[r]=K(t[i]):"number"===s?e[r]=+t[i]:s.indexOf("]")>=0?e[r]=t[i].split(","):e[r]=t[i]:($(2,`[config] Missing value for the '${n}' argument. Using the default value.`),o=!0)),e[r])),e)}o&&X();return e}(pe,t,O)),pe),initExport:async e=>{var t;return t=e.customLogic&&e.customLogic.allowCodeExecution,Ke=K(t),(e=>{U(e&&parseInt(e.level)),e&&e.dest&&M(e.dest,e.file||"highcharts-export-server.log")})(e.logging),await ne(e.highcharts||{version:"latest"}),await Ue({pool:e.pool||{minWorkers:1,maxWorkers:1},puppeteerArgs:e.puppeteer?.args||[]}),e},singleExport:async e=>{e.export.instr=e.export.instr||e.export.options,await Je(e,(async(e,t)=>{if(e)throw e;const{outfile:r,type:o}=t.options.export;a(r||`chart.${o}`,"svg"!==o?Buffer.from(t.result,"base64"):t.result),await Me()}))},batchExport:async e=>{const t=[];for(let r of e.export.batch.split(";"))r=r.split("="),2===r.length&&t.push(Je({...e,export:{...e.export,infile:r[0],outfile:r[1]}},((e,t)=>{if(e)throw e;a(t.options.export.outfile,Buffer.from(t.result,"base64"))})));try{await Promise.all(t),await Me()}catch(e){throw new Z("[chart] Error encountered during batch export.").setError(e)}},startExport:Je,killPool:Me,log:$,logWithStack:j,setLogLevel:U,enableFileLogging:M,mapToNewConfig:e=>{const t={};for(const[r,o]of Object.entries(e)){const e=C[r]?C[r].split("."):[];e.reduce(((t,r,i)=>t[r]=e.length-1===i?o:t[r]||{}),t)}return t},manualConfig:async e=>{let t={};r(e)&&(t=JSON.parse(n(e,"utf8")));const o=Object.keys(_).map((e=>({title:`${e} options`,value:e})));return v({type:"multiselect",name:"category",message:"Which category do you want to configure?",hint:"Space: Select specific, A: Select all, Enter: Confirm.",instructions:"",choices:o},{onSubmit:async(r,o)=>{let i=0,n=[];for(const e of o)_[e]=_[e].map((t=>({...t,section:e}))),n=[...n,..._[e]];return await v(n,{onSubmit:async(r,o)=>{if("modules"===r.name?(o=o.length?o.map((e=>r.choices[e])):r.choices,t[r.section][r.name]=o):t[r.section]=me(Object.assign({},t[r.section]||{}),r.name.split("."),r.choices?r.choices[o]:o),++i===n.length){try{await s.writeFile(e,JSON.stringify(t,null,2),"utf8")}catch(t){j(1,t,`[config] An error occurred while creating the ${e} file.`)}return!0}}}),!0}})},printLogo:e=>{const t=JSON.parse(n(c(G,"package.json"))).version;e?console.log(`Starting Highcharts Export Server v${t}...`):console.log(n(G+"/msg/startup.msg").toString().bold.yellow,`v${t}`)},printUsage:X};export{vt as default};
//# sourceMappingURL=index.esm.js.map
