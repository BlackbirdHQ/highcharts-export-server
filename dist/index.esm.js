import"colors";import e,{existsSync as t,mkdirSync as o,appendFile as r,readFileSync as i,writeFileSync as n,promises as s}from"fs";import a,{join as l,posix as c}from"path";import p from"body-parser";import u from"cors";import d from"express";import h from"http";import g from"https";import m from"multer";import f from"dotenv";import v from"express-rate-limit";import*as y from"url";import{fileURLToPath as w}from"url";import b from"https-proxy-agent";import{Pool as T}from"tarn";import{v4 as x}from"uuid";import k from"puppeteer";import E from"node:path";import{randomBytes as S}from"node:crypto";import"prompts";f.config();const H={puppeteer:{args:{value:[],type:"string[]",description:"Array of arguments to send to puppeteer."}},highcharts:{version:{value:"latest",envLink:"HIGHCHARTS_VERSION",type:"string",description:"Highcharts version to use."},cdnURL:{value:"https://code.highcharts.com/",envLink:"HIGHCHARTS_CDN",type:"string",description:"The CDN URL of Highcharts scripts to use."},coreScripts:{envLink:"HIGHCHARTS_CORE_SCRIPTS",value:["highcharts","highcharts-more","highcharts-3d"],type:"string[]",description:"Highcharts core scripts to fetch."},modules:{envLink:"HIGHCHARTS_MODULES",value:["stock","map","gantt","exporting","export-data","parallel-coordinates","accessibility","annotations-advanced","boost-canvas","boost","data","draggable-points","static-scale","broken-axis","heatmap","tilemap","timeline","treemap","treegraph","item-series","drilldown","histogram-bellcurve","bullet","funnel","funnel3d","pyramid3d","networkgraph","pareto","pattern-fill","pictorial","price-indicator","sankey","arc-diagram","dependency-wheel","series-label","solid-gauge","sonification","stock-tools","streamgraph","sunburst","variable-pie","variwide","vector","venn","windbarb","wordcloud","xrange","no-data-to-display","drag-panes","debugger","dumbbell","lollipop","cylinder","organization","dotplot","marker-clusters","hollowcandlestick","heikinashi"],type:"string[]",description:"Highcharts modules to fetch."},indicators:{envLink:"HIGHCHARTS_INDICATORS",value:["indicators-all"],type:"string[]",description:"Highcharts indicators to fetch."},scripts:{value:["https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js","https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.34/moment-timezone-with-data.min.js"],type:"string[]",description:"Additional direct scripts/optional dependencies (e.g. moment.js)."},forceFetch:{envLink:"HIGHCHARTS_FORCE_FETCH",value:!1,type:"boolean",description:"Should all the scripts be refetched after rerunning the server."}},export:{infile:{value:!1,type:"string",description:"The input file name along with a type (json or svg). It can be a correct JSON or SVG file."},instr:{value:!1,type:"string",description:"An input in a form of a stringified JSON or SVG file. Overrides the --infile."},options:{value:!1,type:"string",description:"An alias for the --instr option."},outfile:{value:!1,type:"string",description:"The output filename along with a type (jpeg, png, pdf or svg). Ignores the --type flag."},type:{envLink:"EXPORT_DEFAULT_TYPE",value:"png",type:"string",description:"The format of the file to export to. Can be jpeg, png, pdf or svg."},constr:{envLink:"EXPORT_DEFAULT_CONSTR",value:"chart",type:"string",description:"The constructor to use. Can be chart, stockChart, mapChart or ganttChart."},defaultHeight:{envLink:"EXPORT_DEFAULT_HEIGHT",value:400,type:"number",description:"The default height of the exported chart. Used when not found any value set."},defaultWidth:{envLink:"EXPORT_DEFAULT_WIDTH",value:600,type:"number",description:"The default width of the exported chart. Used when not found any value set."},defaultScale:{envLink:"EXPORT_DEFAULT_SCALE",value:1,type:"number",description:"The default scale of the exported chart. Ranges between 1 and 5."},height:{type:"number",value:!1,description:"The default height of the exported chart. Overrides the option in the chart settings."},width:{type:"number",value:!1,description:"The width of the exported chart. Overrides the option in the chart settings."},scale:{value:!1,type:"number",description:"The scale of the exported chart. Ranges between 1 and 5."},globalOptions:{value:!1,type:"string",description:"A stringified JSON or a filename with options to be passed into the Highcharts.setOptions."},themeOptions:{value:!1,type:"string",description:"A stringified JSON or a filename with theme options to be passed into the Highcharts.setOptions."},batch:{value:!1,type:"string",description:'Starts a batch job. A string that contains input/output pairs: "in=out;in=out;..".'},rasterizationTimeout:{envLink:"EXPORT_RASTERIZATION_TIMEOUT",value:1500,type:"number",description:"The number of milliseconds to wait for rendering a webpage."}},customCode:{allowCodeExecution:{envLink:"HIGHCHARTS_ALLOW_CODE_EXECUTION",value:!1,type:"boolean",description:"If set to true, allow for the execution of arbitrary code when exporting."},allowFileResources:{envLink:"HIGHCHARTS_ALLOW_FILE_RESOURCES",value:!0,type:"boolean",description:"Allow injecting resources from the filesystem. Has no effect when running as a server."},customCode:{value:!1,type:"string",description:"A function to be called before chart initialization. Can be a filename with the js extension."},callback:{value:!1,type:"string",description:"A JavaScript file with a function to run on construction."},resources:{value:!1,type:"string",description:"An additional resource in a form of stringified JSON. It can contain files, js and css sections."},loadConfig:{value:!1,type:"string",description:"A file that contains a pre-defined config to use."},createConfig:{value:!1,type:"string",description:"Allows to set options through a prompt and save in a provided config file."}},server:{enable:{envLink:"HIGHCHARTS_SERVER_ENABLE",value:!1,type:"boolean",cliName:"enableServer",description:"If set to true, starts a server on 0.0.0.0."},host:{envLink:"HIGHCHARTS_SERVER_HOST",value:"0.0.0.0",type:"string",description:"The hostname of the server. Also starts a server listening on the supplied hostname."},port:{envLink:"HIGHCHARTS_SERVER_PORT",value:7801,type:"number",description:"The port to use for the server. Defaults to 7801."},ssl:{enable:{envLink:"HIGHCHARTS_SERVER_SSL_ENABLE",value:!1,type:"boolean",cliName:"enableSsl",description:"Enables the SSL protocol."},force:{envLink:"HIGHCHARTS_SERVER_SSL_FORCE",value:!1,type:"boolean",cliName:"sslForced",description:"If set to true, forces the server to only serve over HTTPS."},port:{envLink:"HIGHCHARTS_SERVER_SSL_PORT",value:443,type:"number",cliName:"sslPort",description:"The port on which to run the SSL server."},certPath:{envLink:"HIGHCHARTS_SSL_CERT_PATH",value:"",type:"string",description:"The path to the SSL certificate/key."}},rateLimiting:{enable:{envLink:"HIGHCHARTS_RATE_LIMIT_ENABLE",value:!1,type:"boolean",cliName:"enableRateLimiting",description:"Enables rate limiting."},maxRequests:{envLink:"HIGHCHARTS_RATE_LIMIT_MAX",value:10,type:"number",description:"Max requests allowed in a one minute."},window:{envLink:"HIGHCHARTS_RATE_LIMIT_WINDOW",value:1,type:"number",description:"The time window in minutes for rate limiting."},delay:{envLink:"HIGHCHARTS_RATE_LIMIT_DELAY",value:0,type:"number",description:"The amount to delay each successive request before hitting the max."},trustProxy:{envLink:"HIGHCHARTS_RATE_LIMIT_TRUST_PROXY",value:!1,type:"boolean",description:"Set this to true if behind a load balancer."},skipKey:{envLink:"HIGHCHARTS_RATE_LIMIT_SKIP_KEY",value:"",type:"number|string",description:"Allows bypassing the rate limiter and should be provided with skipToken argument."},skipToken:{envLink:"HIGHCHARTS_RATE_LIMIT_SKIP_TOKEN",value:"",type:"number|string",description:"Allows bypassing the rate limiter and should be provided with skipKey argument."}}},pool:{minWorkers:{envLink:"HIGHCHARTS_POOL_MIN_WORKERS",value:4,type:"number",description:"The number of initial workers to spawn."},maxWorkers:{envLink:"HIGHCHARTS_POOL_MAX_WORKERS",value:8,type:"number",description:"The number of max workers to spawn."},workLimit:{envLink:"HIGHCHARTS_POOL_WORK_LIMIT",value:40,type:"number",description:"The pieces of work that can be performed before restarting process."},acquireTimeout:{envLink:"HIGHCHARTS_POOL_ACQUIRE_TIMEOUT",value:5e3,type:"number",description:"The number of milliseconds to wait for acquiring a resource."},createTimeout:{envLink:"HIGHCHARTS_POOL_CREATE_TIMEOUT",value:5e3,type:"number",description:"The number of milliseconds to wait for creating a resource."},destroyTimeout:{envLink:"HIGHCHARTS_POOL_DESTROY_TIMEOUT",value:5e3,type:"number",description:"The number of milliseconds to wait for destroying a resource."},idleTimeout:{envLink:"HIGHCHARTS_POOL_IDLE_TIMEOUT",value:3e4,type:"number",description:"The number of milliseconds after an idle resource is destroyed."},createRetryInterval:{envLink:"HIGHCHARTS_POOL_CREATE_RETRY_INTERVAL",value:200,type:"number",description:"The number of milliseconds after the create process is retried in case of fail."},reaperInterval:{envLink:"HIGHCHARTS_POOL_REAPER_INTERVAL",value:1e3,type:"number",description:"The number of milliseconds after the check for idle resources to destroy is triggered."},benchmarking:{envLink:"HIGHCHARTS_POOL_BENCHMARKING",value:!1,type:"boolean",description:"Enable benchmarking."},listenToProcessExits:{envLink:"HIGHCHARTS_POOL_LISTEN_TO_PROCESS_EXITS",value:!0,type:"boolean",description:"Set to false in order to skip attaching process.exit handlers."}},logging:{level:{envLink:"HIGHCHARTS_LOG_LEVEL",value:4,type:"number",cliName:"logLevel",description:"The log level (0: silent, 1: error, 2: warning, 3: notice, 4: verbose)."},file:{envLink:"HIGHCHARTS_LOG_FILE",value:"highcharts-export-server.log",type:"string",cliName:"logFile",description:"A name of a log file. The --logDest also needs to be set to enable file logging."},dest:{envLink:"HIGHCHARTS_LOG_DEST",value:"log/",type:"string",cliName:"logDest",description:"The path to store log files. Also enables file logging."}},ui:{enable:{envLink:"HIGHCHARTS_UI_ENABLE",value:!1,type:"boolean",cliName:"enableUi",description:"Enables the UI for the export server."},route:{envLink:"HIGHCHARTS_UI_ROUTE",value:"/",type:"string",cliName:"uiRoute",description:"The route to attach the UI to."}},other:{noLogo:{envLink:"HIGHCHARTS_NO_LOGO",value:!1,type:"boolean",description:"Skip printing the logo on a startup. Will be replaced by a simple text."}},payload:{}};H.puppeteer.args.value.join(","),H.highcharts.version.value,H.highcharts.cdnURL.value,H.highcharts.modules.value,H.highcharts.scripts.value.join(","),H.highcharts.forceFetch.value,H.export.type.value,H.export.constr.value,H.export.defaultHeight.value,H.export.defaultWidth.value,H.export.defaultScale.value,H.export.rasterizationTimeout.value,H.customCode.allowCodeExecution.value,H.customCode.allowFileResources.value,H.server.enable.value,H.server.host.value,H.server.port.value,H.server.ssl.enable.value,H.server.ssl.force.value,H.server.ssl.port.value,H.server.ssl.certPath.value,H.server.rateLimiting.enable.value,H.server.rateLimiting.maxRequests.value,H.server.rateLimiting.window.value,H.server.rateLimiting.delay.value,H.server.rateLimiting.trustProxy.value,H.server.rateLimiting.skipKey.value,H.server.rateLimiting.skipToken.value,H.pool.minWorkers.value,H.pool.maxWorkers.value,H.pool.workLimit.value,H.pool.acquireTimeout.value,H.pool.createTimeout.value,H.pool.destroyTimeout.value,H.pool.idleTimeout.value,H.pool.createRetryInterval.value,H.pool.reaperInterval.value,H.pool.benchmarking.value,H.pool.listenToProcessExits.value,H.logging.level.value,H.logging.file.value,H.logging.dest.value,H.ui.enable.value,H.ui.route.value,H.other.noLogo.value;const R=["options","globalOptions","themeOptions","resources","payload"],C={},L=(e,t="")=>{Object.keys(e).forEach((o=>{if(!["puppeteer","highcharts"].includes(o)){const r=e[o];void 0===r.value?L(r,`${t}.${o}`):C[r.cliName||o]=`${t}.${o}`.substring(1)}}))};L(H);const O=["red","yellow","blue","gray"];let _={toConsole:!0,toFile:!1,pathCreated:!1,levelsDesc:[{title:"error",color:O[0]},{title:"warning",color:O[1]},{title:"notice",color:O[2]},{title:"verbose",color:O[3]}],listeners:[]};for(const[e,t]of Object.entries(H.logging))_[e]=t.value;const I=(e,i)=>{_.toFile&&(_.pathCreated||(!t(_.dest)&&o(_.dest),_.pathCreated=!0),r(`${_.dest}${_.file}`,[i].concat(e).join(" ")+"\n",(e=>{e&&(console.log(`[logger] Unable to write to log file: ${e}`),_.toFile=!1)})))},A=(...e)=>{const[t,...o]=e,{level:r,levelsDesc:i}=_;if(0===t||t>r||r>i.length)return;const n=`${(new Date).toString().split("(")[0].trim()} [${i[t-1].title}] -`;_.listeners.forEach((e=>{e(n,o.join(" "))})),I(o,n),_.toConsole&&console.log.apply(void 0,[n.toString()[_.levelsDesc[t-1].color]].concat(o))},$=(e,t,o)=>{if(A(e,(o||t&&`${t.name}: ${t.message}`)[O[e-1]]),t){const e=t.stack;_.toConsole&&console.log(e),I([e])}},P=(e,t,o,r)=>{$(1,e),"development"!==process.env.NODE_ENV&&delete e.stack,r(e)},j=(e,t,o,r)=>{const{statusCode:i,status:n,message:s,stack:a}=e,l=i||n||500;o.status(l).json({statusCode:l,message:s,stack:a})};var N=(e,t)=>{const o="Too many requests, you have been rate limited. Please try again later.",r={max:t.maxRequests||30,window:t.window||1,delay:t.delay||0,trustProxy:t.trustProxy||!1,skipKey:t.skipKey||!1,skipToken:t.skipToken||!1};r.trustProxy&&e.enable("trust proxy");const i=v({windowMs:60*r.window*1e3,max:r.max,delayMs:r.delay,handler:(e,t)=>{t.format({json:()=>{t.status(429).send({message:o})},default:()=>{t.status(429).send(o)}})},skip:e=>!1!==r.skipKey&&!1!==r.skipToken&&e.query.key===r.skipKey&&e.query.access_token===r.skipToken&&(A(4,"[rate limiting] Skipping rate limiter."),!0)});e.use(i),A(3,`[rate-limiting] Enabled rate limiting: ${r.max} requests per ${r.window} minute per IP, trusting proxy: ${r.trustProxy}.`)};const G=w(new URL("../.",import.meta.url)),W=(e,t)=>{const o=["png","jpeg","pdf","svg"];if(t){const r=t.split(".").pop();o.includes(r)&&e!==r&&(e=r)}return{"image/png":"png","image/jpeg":"jpeg","application/pdf":"pdf","image/svg+xml":"svg"}[e]||o.find((t=>t===e))||"png"},M=(e=!1,t)=>{const o=["js","css","files"];let r=e,n=!1;if(t&&e.endsWith(".json"))try{e?e&&e.endsWith(".json")?r=U(i(e,"utf8")):(r=U(e),!0===r&&(r=U(i("resources.json","utf8")))):r=U(i("resources.json","utf8"))}catch(e){return A(3,"[cli] No resources found.")}else r=U(e),t||delete r.files;for(const e in r)o.includes(e)?n||(n=!0):delete r[e];return n?(r.files&&(r.files=r.files.map((e=>e.trim())),(!r.files||r.files.length<=0)&&delete r.files),r):A(3,"[cli] No resources found.")};function U(e,t){try{const o=JSON.parse("string"!=typeof e?JSON.stringify(e):e);return"string"!=typeof o&&t?JSON.stringify(o):o}catch(e){return!1}}const F=e=>{if(null===e||"object"!=typeof e)return e;const t=Array.isArray(e)?[]:{};for(const o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=F(e[o]));return t},D=(e,t)=>JSON.stringify(e,((e,o)=>("string"==typeof o&&((o=o.trim()).startsWith("function(")||o.startsWith("function ("))&&o.endsWith("}")&&(o=t?`EXP_FUN${(o+"").replaceAll(/\n|\t|\r/g," ")}EXP_FUN`:void 0),"function"==typeof o?`EXP_FUN${(o+"").replaceAll(/\n|\t|\r/g," ")}EXP_FUN`:o))).replaceAll(/"EXP_FUN|EXP_FUN"/g,"");function q(){console.log("Usage of CLI arguments:".bold,"\n------",`\nFor more detailed information visit readme at: ${"https://github.com/highcharts/node-export-server#readme".bold.yellow}.`);const e=t=>{for(const[o,r]of Object.entries(t))if(Object.prototype.hasOwnProperty.call(r,"value")){let e=`  --${r.cliName||o} ${("<"+r.type+">").green} `;if(e.length<48)for(let t=e.length;t<48;t++)e+=".";console.log(e,r.description,`[Default: ${r.value.toString().bold}]`.blue)}else e(r)};Object.keys(H).forEach((t=>{["puppeteer","highcharts"].includes(t)||(console.log(`\n${t.toUpperCase()}`.red),e(H[t]))})),console.log("\n")}const V=e=>!["false","undefined","null","NaN","0",""].includes(e)&&!!e,J=(e,t)=>{if(e&&"string"==typeof e)return(e=e.trim()).endsWith(".js")?!!t&&J(i(e,"utf8")):e.startsWith("function()")||e.startsWith("function ()")||e.startsWith("()=>")||e.startsWith("() =>")?`(${e})()`:e.replace(/;$/,"")};async function z(e,t={}){return new Promise(((o,r)=>{const i=(e=>e.startsWith("https")?g:h)(e);i.get(e,t,(e=>{let t="";e.on("data",(e=>{t+=e})),e.on("end",(()=>{t||r("Nothing was fetched from the URL."),e.text=t,o(e)}))})).on("error",(e=>{r(e)}))}))}class X extends Error{constructor(e){super(),this.message=e}setError(e){return this.error=e,this.name=e.name,e.stack&&(this.stack=e.stack),this}}f.config();const K=l(G,".cache"),B={cdnURL:"https://code.highcharts.com/",activeManifest:{},sources:"",hcVersion:""};let Y=!1;const Q=()=>B.hcVersion=B.sources.substr(0,B.sources.indexOf("*/")).replace("/*","").replace("*/","").replace(/\n/g,"").trim(),Z=async(e,t)=>{try{e.endsWith(".js")&&(e=e.substring(0,e.length-3)),A(4,`[cache] Fetching script - ${e}.js`);const o=t?{agent:t,timeout:+process.env.PROXY_SERVER_TIMEOUT||5e3}:{},r=await z(`${e}.js`,o);if(200===r.statusCode)return r.text;throw`${r.statusCode}`}catch(t){throw A(1,`[cache] Error fetching script ${e}.js: ${t}.`),t}},ee=async(e,t)=>{const{coreScripts:o,modules:r,indicators:i,scripts:s}=e,a="latest"!==e.version&&e.version?`${e.version}/`:"";A(3,`[cache] Updating cache to Highcharts ${a}.`);const l=[...o.map((e=>`${a}${e}`)),...r.map((e=>"map"===e?`maps/${a}modules/${e}`:`${a}modules/${e}`)),...i.map((e=>`stock/${a}indicators/${e}`))];let c;const p=process.env.PROXY_SERVER_HOST,u=process.env.PROXY_SERVER_PORT;if(p&&u)try{c=new b({host:p,port:+u})}catch(e){throw new X("[cache] Could not create a Proxy Agent.").setError(e)}const d={};try{return B.sources=(await Promise.all([...l.map((async t=>{const o=await Z(`${e.cdnURL||B.cdnURL}${t}`,c);return"string"==typeof o&&(d[t.replace(/(.*)\/|(.*)modules\/|stock\/(.*)indicators\/|maps\/(.*)modules\//gi,"")]=1),o})),...s.map((e=>Z(e,c)))])).join(";\n"),Q(),n(t,B.sources),d}catch(e){throw new X("[cache] Unable to update local Highcharts cache.").setError(e)}},te=async e=>{let r;const s=l(K,"manifest.json"),a=l(K,"sources.js");if(Y=e,!t(K)&&o(K),!t(s)||e.forceFetch)A(3,"[cache] Fetching and caching Highcharts dependencies."),r=await ee(e,a);else{let t=!1;const o=JSON.parse(i(s));if(o.modules&&Array.isArray(o.modules)){const e={};o.modules.forEach((t=>e[t]=1)),o.modules=e}const{modules:n,coreScripts:l,indicators:c}=e,p=n.length+l.length+c.length;o.version!==e.version?(A(2,"[cache] Highcharts version mismatch in cache, need to re-fetch."),t=!0):Object.keys(o.modules||{}).length!==p?(A(2,"[cache] Cache and requested modules do not match, need to re-fetch."),t=!0):t=(e.modules||[]).some((e=>{if(!o.modules[e])return A(2,`[cache] The ${e} missing in cache, need to re-fetch.`),!0})),t?r=await ee(e,a):(A(3,"[cache] Dependency cache is up to date, proceeding."),B.sources=i(a,"utf8"),r=o.modules,Q())}await(async(e,t)=>{const o={version:e.version,modules:t||{}};B.activeManifest=o,A(4,"[cache] Writing a new manifest.");try{n(l(K,"manifest.json"),JSON.stringify(o),"utf8")}catch(e){throw new X("[cache] Error writing cache manifest.").setError(e)}})(e,r)};var oe=async e=>!!Y&&await te(Object.assign(Y,{version:e})),re=()=>B,ie=()=>B.hcVersion;const ne=S(64).toString("base64url"),se=E.join("tmp",`puppeteer-${ne}`),ae=[`--user-data-dir=${E.join(se,"profile")}`,"--autoplay-policy=user-gesture-required","--disable-background-networking","--disable-background-timer-throttling","--disable-backgrounding-occluded-windows","--disable-breakpad","--disable-client-side-phishing-detection","--disable-component-update","--disable-default-apps","--disable-dev-shm-usage","--disable-domain-reliability","--disable-extensions","--disable-features=AudioServiceOutOfProcess","--disable-hang-monitor","--disable-ipc-flooding-protection","--disable-notifications","--disable-offer-store-unmasked-wallet-cards","--disable-popup-blocking","--disable-print-preview","--disable-prompt-on-repost","--disable-renderer-backgrounding","--disable-session-crashed-bubble","--disable-setuid-sandbox","--disable-speech-api","--disable-sync","--hide-crash-restore-bubble","--hide-scrollbars","--ignore-gpu-blacklist","--metrics-recording-only","--mute-audio","--no-default-browser-check","--no-first-run","--no-pings","--no-sandbox","--no-zygote","--password-store=basic","--use-mock-keychain"],le=y.fileURLToPath(new URL(".",import.meta.url)),ce=e.readFileSync(le+"/../templates/template.html","utf8");let pe;const ue=async e=>{await e.setContent(ce),await e.addScriptTag({path:le+"/../.cache/sources.js"}),await e.evaluate((()=>window.setupHighcharts())),e.on("pageerror",(async t=>{await e.$eval("#container",((e,t)=>{window._displayErrors&&(e.innerHTML=t)}),`<h1>Chart input data error</h1>${t.toString()}`)}))},de=async()=>{if(!pe)return!1;const e=await pe.newPage();return await e.setCacheEnabled(!1),await ue(e),e},he=async(e,t=!1)=>{try{t?(await e.goto("about:blank"),await ue(e)):await e.$eval("body",(e=>e.innerHTML='<div id="chart-container"><div id="container"></div></div>'))}catch(e){$(2,e,"[browser] Could not clear the page content.")}},ge=async()=>{pe.connected&&await pe.close()};const me=y.fileURLToPath(new URL(".",import.meta.url)),fe=(e,t,o)=>e.evaluate(((e,t)=>window.triggerExport(e,t)),t,o);var ve=async(e,t,o)=>{const r=[],n=async e=>{for(const e of r)await e.dispose();await e.evaluate((()=>{const[,...e]=document.getElementsByTagName("script"),[,...t]=document.getElementsByTagName("style"),[...o]=document.getElementsByTagName("link");for(const r of[...e,...t,...o])r.remove()}))};try{const s=()=>{};A(4,"[export] Determining export path.");const l=o.export;await e.evaluate((()=>requestAnimationFrame((()=>{}))));const c=l?.options?.chart?.displayErrors&&re().activeManifest.modules.debugger;await e.evaluate((e=>window._displayErrors=e),c);const p=()=>{};let u;if(t.indexOf&&(t.indexOf("<svg")>=0||t.indexOf("<?xml")>=0)){if(A(4,"[export] Treating as SVG."),"svg"===l.type)return t;u=!0;const o=()=>{};await e.setContent((e=>`\n<!DOCTYPE html>\n<html lang='en-US'>\n  <head>\n    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">\n    <title>Highcarts Export</title>\n  </head>\n  <style>\n    \n\nhtml, body {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n#table-div, #sliders, #datatable, #controls, .ld-row {\n  display: none;\n  height: 0;\n}\n\n#chart-container {\n  box-sizing: border-box;\n  margin: 0;\n  overflow: auto;\n  font-size: 0;\n}\n\n#chart-container > figure, div {\n  margin-top: 0 !important;\n  margin-bottom: 0 !important;\n}\n\n\n  </style>\n  <body>\n    <div id="chart-container">\n      ${e}\n    </div>\n  </body>\n</html>\n\n`)(t)),o()}else if(A(4,"[export] Treating as config."),l.strInj){const t=()=>{};await fe(e,{chart:{height:l.height,width:l.width}},o),t()}else{t.chart.height=l.height,t.chart.width=l.width;const r=()=>{};await fe(e,t,o),r()}p();const d=()=>{},h=o.customCode.resources;if(h){if(h.js&&r.push(await e.addScriptTag({content:h.js})),h.files)for(const t of h.files)try{const o=!t.startsWith("http");r.push(await e.addScriptTag(o?{content:i(t,"utf8")}:{url:t}))}catch(e){$(2,e,"[export] JS file cannot be loaded.")}const t=()=>{};if(h.css){let t=h.css.match(/@import\s*([^;]*);/g);if(t)for(let i of t)i&&(i=i.replace("url(","").replace("@import","").replace(/"/g,"").replace(/'/g,"").replace(/;/,"").replace(/\)/g,"").trim(),i.startsWith("http")?r.push(await e.addStyleTag({url:i})):o.customCode.allowFileResources&&r.push(await e.addStyleTag({path:a.join(me,i)})));r.push(await e.addStyleTag({content:h.css.replace(/@import\s*([^;]*);/g,"")||" "}))}t()}d();const g=u?await e.$eval("#chart-container svg:first-of-type",((e,t)=>({chartHeight:e.height.baseVal.value*t,chartWidth:e.width.baseVal.value*t})),parseFloat(l.scale)):await e.evaluate((()=>{const{chartHeight:e,chartWidth:t}=window.Highcharts.charts[0];return{chartHeight:e,chartWidth:t}})),m=()=>{},f=Math.ceil(g?.chartHeight||l.height),v=Math.ceil(g?.chartWidth||l.width);await e.setViewport({height:f,width:v,deviceScaleFactor:u?1:parseFloat(l.scale)});const y=u?e=>{document.body.style.zoom=e,document.body.style.margin="0px"}:()=>{document.body.style.zoom=1};await e.evaluate(y,parseFloat(l.scale));const{height:w,width:b,x:T,y:x}=await(e=>e.$eval("#chart-container",(e=>{const{x:t,y:o,width:r,height:i}=e.getBoundingClientRect();return{x:t,y:o,width:r,height:Math.trunc(i>1?i:500)}})))(e);let k;u||await e.setViewport({width:Math.round(b),height:Math.round(w),deviceScaleFactor:parseFloat(l.scale)}),m();const E=()=>{};if("svg"===l.type)k=await(e=>e.$eval("#container svg:first-of-type",(e=>e.outerHTML)))(e);else if("png"===l.type||"jpeg"===l.type)k=await((e,t,o,r,i)=>Promise.race([e.screenshot({type:t,encoding:o,clip:r,omitBackground:"png"==t}),new Promise(((e,t)=>setTimeout((()=>t(new Error("Rasterization timeout"))),i||1500)))]))(e,l.type,"base64",{width:v,height:f,x:T,y:x},l.rasterizationTimeout);else{if("pdf"!==l.type)throw new X(`[export] Unsupported output format ${l.type}.`);k=await((e,t,o,r)=>e.pdf({height:t+1,width:o,encoding:r}))(e,f,v,"base64")}return await e.evaluate((()=>{if("undefined"!=typeof Highcharts){const e=Highcharts.charts;if(Array.isArray(e)&&e.length)for(const t of e)t&&t.destroy(),Highcharts.charts.shift()}})),E(),s(),await n(e),k}catch(t){return await n(e),t}};let ye,we=0,be=0,Te=0,xe=0,ke=0,Ee={},Se=!1;const He={create:async()=>{const e=x();let t=!1;const o=(new Date).getTime();try{if(t=await de(),!t||t.isClosed())throw"[pool] Invalid page";A(3,`[pool] Successfully created a worker ${e} - took ${(new Date).getTime()-o} ms.`)}catch(e){throw A(1,`[pool] Error creating a new page in pool entry creation! ${e}`),"Error creating page"}return{id:e,page:t,workCount:Math.round(Math.random()*(Ee.workLimit/2))}},validate:async e=>Ee.workLimit&&++e.workCount>Ee.workLimit?(A(3,`[pool] Worker failed validation: exceeded work limit (limit is ${Ee.workLimit})`),!1):(await he(e.page,!0),!0),destroy:e=>{A(3,`[pool] Destroying pool entry ${e.id}.`),e.page&&e.page.close()},log:(e,t)=>console.log(`${t}: ${e}`)},Re=async e=>{ye=e.puppeteerArgs;try{await(async e=>{const t=[...ae,...e||[]];if(!pe){let e=0;const o=async()=>{try{A(3,`[browser] Attempting to get a browser instance (try ${e}).`),pe=await k.launch({headless:"new",args:t,userDataDir:"./tmp/"})}catch(t){if($(1,t,"[browser] Could not launch a browser instance."),!(++e<25))throw t;A(3,`[browser] Retry to open a browser (${e} out of 25).`),await new Promise((e=>setTimeout(e,4e3))),await o()}};try{await o()}catch(e){throw new X("[browser] Max retries to open a browser instance reached.").setError(e)}if(!pe)throw new X("[browser] Cannot find a browser to open.")}return pe})(ye)}catch(e){throw new X(e.message).setError(e)}if(Ee=e&&e.pool?{...e.pool}:{},A(3,`[pool] Initializing pool with workers: min ${Ee.minWorkers}, max ${Ee.maxWorkers}.`),Se)return A(4,"[pool] Already initialized, please kill it before creating a new one.");Ee.listenToProcessExits&&(A(4,"[pool] Attaching exit listeners to the process."),process.on("exit",(async()=>{await Ce()})),process.on("SIGINT",((e,t)=>{A(4,`The ${e} event with code: ${t}.`),process.exit(1)})),process.on("SIGTERM",((e,t)=>{A(4,`The ${e} event with code: ${t}.`),process.exit(1)})),process.on("uncaughtException",((e,t)=>{$(1,e,`The ${t} error.`),process.exit(1)}))),parseInt(Ee.minWorkers)>parseInt(Ee.maxWorkers)&&(Ee.minWorkers=Ee.maxWorkers);try{Se=new T({...He,min:parseInt(Ee.minWorkers),max:parseInt(Ee.maxWorkers),acquireTimeoutMillis:Ee.acquireTimeout,createTimeoutMillis:Ee.createTimeout,destroyTimeoutMillis:Ee.destroyTimeout,idleTimeoutMillis:Ee.idleTimeout,createRetryIntervalMillis:Ee.createRetryInterval,reapIntervalMillis:Ee.reaperInterval,propagateCreateError:!1}),Se.on("createFail",((e,t)=>{$(1,t,`[pool] Error when creating worker of an event id ${e}.`)})),Se.on("acquireFail",((e,t)=>{$(1,t,`[pool] Error when acquiring worker of an event id ${e}.`)})),Se.on("destroyFail",((e,t,o)=>{$(1,o,`[pool] Error when destroying worker of an id ${t.id}, event id ${e}.`)})),Se.on("release",(async e=>{await he(e.page,!1),A(4,`[pool] Releasing a worker of an id ${e.id}.`)})),Se.on("destroySuccess",((e,t)=>{A(4,`[pool] Destroyed a worker of an id ${t.id}.`)}));const e=[];for(let t=0;t<Ee.minWorkers;t++)try{const t=await Se.acquire().promise;e.push(t)}catch(e){$(1,e,"[pool] Could not create an initial resource.")}e.forEach((e=>{Se.release(e)})),A(3,"[pool] The pool is ready"+(e.length?` with ${e.length} initial resources waiting.`:"."))}catch(e){throw new X("[pool] Could not create the worker pool.").setError(e)}};async function Ce(){return A(3,"[pool] Killing all workers."),Se.destroyed?(await ge(),!0):(await Se.destroy(),await ge(),!0)}const Le=async(e,t)=>{let o;try{if(A(4,"[pool] Work received, starting to process."),Ee.benchmarking&&Oe(),++be,!Se)throw new X("Work received, but pool has not been started.");try{A(4,"[pool] Acquiring a worker handle."),o=await Se.acquire().promise}catch(e){throw new X("Error when acquiring available entry.").setError(e)}if(A(4,"[pool] Acquired a worker handle."),!o.page)throw new X("Resolved worker page is invalid: pool setup is wonky.");let r=(new Date).getTime();A(4,`[pool] Starting work on pool entry ${o.id}.`);const i=await ve(o.page,e,t);if(i instanceof Error)throw"Rasterization timeout"===i.message&&(o.page.close(),o.page=await de()),new X("Error encountered during export.").setError(i);Se.release(o);const n=(new Date).getTime()-r;return Te+=n,ke=Te/++we,A(4,`[pool] Work completed in ${n} ms.`),{result:i,options:t}}catch(e){throw++xe,o&&Se.release(o),new X(`[pool] In pool.postWork: ${e.message}`).setError(e)}};function Oe(){const{min:e,max:t,size:o,available:r,borrowed:i,pending:n,spareResourceCapacity:s}=Se;A(4,`[pool] The minimum number of resources allowed by pool: ${e}.`),A(4,`[pool] The maximum number of resources allowed by pool: ${t}.`),A(4,`[pool] The number of all resources in pool (free or in use): ${o}.`),A(4,`[pool] The number of resources that are currently available: ${r}.`),A(4,`[pool] The number of resources that are currently acquired: ${i}.`),A(4,`[pool] The number of callers waiting to acquire a resource: ${n}.`),A(4,`[pool] The number of how many more resources can the pool manage/create: ${s}.`)}var _e=()=>({min:Se.min,max:Se.max,size:Se.size,available:Se.available,borrowed:Se.borrowed,pending:Se.pending,spareResourceCapacity:Se.spareResourceCapacity}),Ie=()=>be,Ae=()=>xe,$e=()=>ke,Pe=()=>we;const je=JSON.parse(i(l(G,"package.json"))),Ne=new Date;let Ge={};const We=()=>Ge,Me=(e,t,o=[])=>{const r=F(e);for(const[e,n]of Object.entries(t))r[e]="object"!=typeof(i=n)||Array.isArray(i)||null===i||o.includes(e)||void 0===r[e]?void 0!==n?n:r[e]:Me(r[e],n,o);var i;return r};function Ue(e,t={},o=""){Object.keys(e).forEach((r=>{const i=e[r],n=t&&t[r];let s;void 0===i.value?Ue(i,n,`${o}.${r}`):(void 0!==n&&(i.value=n),i.envLink&&("boolean"===i.type?i.value=V([process.env[i.envLink],i.value].find((e=>e||"false"===e))):"number"===i.type?(s=+process.env[i.envLink],i.value=s>=0?s:i.value):i.type.indexOf("]")>=0&&process.env[i.envLink]?i.value=process.env[i.envLink].split(","):i.value=process.env[i.envLink]||i.value))}))}function Fe(e){let t={};for(const[o,r]of Object.entries(e))t[o]=Object.prototype.hasOwnProperty.call(r,"value")?r.value:Fe(r);return t}let De=!1;const qe=async(e,t)=>{A(4,"[chart] Starting exporting process.");const o=((e,t={})=>{let o={};return e.svg?(o=F(t),o.export.type=e.type||e.export.type,o.export.scale=e.scale||e.export.scale,o.export.outfile=e.outfile||e.export.outfile,o.payload={svg:e.svg}):o=Me(t,e,R),o.export.outfile=o.export?.outfile||`chart.${o.export?.type||"png"}`,o})(e,We()),r=o.export;if(o.payload?.svg&&""!==o.payload.svg)try{return A(4,"[chart] Attempting to export from a SVG input."),Xe(o.payload.svg.trim(),o,t)}catch(e){return t(!1,new X("[chart] Error loading SVG input.").setError(e))}if(r.infile&&r.infile.length)try{return A(4,"[chart] Attempting to export from an input file."),o.export.instr=i(r.infile,"utf8"),Xe(o.export.instr.trim(),o,t)}catch(e){return t(!1,new X("[chart] Error loading input file.").setError(e))}if(r.instr&&""!==r.instr||r.options&&""!==r.options)try{return A(4,"[chart] Attempting to export from a raw input."),V(o.customCode?.allowCodeExecution)?ze(o,t):"string"==typeof r.instr?Xe(r.instr.trim(),o,t):Je(o,r.instr||r.options,t)}catch(e){return t(!1,new X("[chart] Error loading raw input.").setError(e))}return t&&t(!1,new X(`[chart] No input specified. ${JSON.stringify(r,void 0,"  ")}`))},Ve=e=>{const{chart:t,exporting:o}=e.export?.options||U(e.export?.instr),r=U(e.export?.globalOptions);let i=e.export?.scale||o?.scale||r?.exporting?.scale||e.export?.defaultScale||1;i=Math.max(.1,Math.min(i,5)),i=((e,t=1)=>{const o=Math.pow(10,t||0);return Math.round(+e*o)/o})(i,2);const n={height:e.export?.height||o?.sourceHeight||t?.height||r?.exporting?.sourceHeight||r?.chart?.height||e.export?.defaultHeight||400,width:e.export?.width||o?.sourceWidth||t?.width||r?.exporting?.sourceWidth||r?.chart?.width||e.export?.defaultWidth||600,scale:i};for(var[s,a]of Object.entries(n))n[s]="string"==typeof a?+a.replace(/px|%/gi,""):a;return n},Je=async(e,t,o,r)=>{let{export:n,customCode:s}=e;const a="boolean"==typeof s.allowCodeExecution?s.allowCodeExecution:De;if(s){if(a)if("string"==typeof e.customCode.resources)e.customCode.resources=M(e.customCode.resources,V(e.customCode.allowFileResources));else if(!e.customCode.resources)try{const t=i("resources.json","utf8");e.customCode.resources=M(t,V(e.customCode.allowFileResources))}catch(e){$(2,e,"[chart] The default resources.json cannot be loaded.")}}else s=e.customCode={};if(!a&&s){if(s.callback||s.resources||s.customCode)return o&&o(!1,new X("[chart] The 'callback', 'resources' and 'customCode' options have been disabled for this server."));s.callback=!1,s.resources=!1,s.customCode=!1}if(t&&(t.chart=t.chart||{},t.exporting=t.exporting||{},t.exporting.enabled=!1),n.constr=n.constr||"chart",n.type=W(n.type,n.outfile),"svg"===n.type&&(n.width=!1),["globalOptions","themeOptions"].forEach((e=>{try{n&&n[e]&&("string"==typeof n[e]&&n[e].endsWith(".json")?n[e]=U(i(n[e],"utf8"),!0):n[e]=U(n[e],!0))}catch(t){n[e]={},$(2,t,`[chart] The '${e}' cannot be loaded.`)}})),s.allowCodeExecution)try{s.customCode=J(s.customCode,s.allowFileResources)}catch(e){$(2,e,"[chart] The 'customCode' cannot be loaded.")}if(s&&s.callback&&s.callback?.indexOf("{")<0)if(s.allowFileResources)try{s.callback=i(s.callback,"utf8")}catch(e){$(2,e,"[chart] The 'callback' cannot be loaded."),s.callback=!1}else s.callback=!1;e.export={...e.export,...Ve(e)};try{return o(await Le(n.strInj||t||r,e))}catch(e){return o(!1,e)}},ze=(e,t)=>{try{let o,r=e.export.instr||e.export.options;return"string"!=typeof r&&(o=r=D(r,e.customCode?.allowCodeExecution)),o=r.replaceAll(/\t|\n|\r/g,"").trim(),";"===o[o.length-1]&&(o=o.substring(0,o.length-1)),e.export.strInj=o,Je(e,!1,t)}catch(o){return t&&t(!1,new X(`[chart] Malformed input detected for ${e.export?.requestId||"?"}. Please make sure that your JSON/JavaScript options are sent using the "options" attribute, and that if you're using SVG, it is unescaped.`).setError(o))}},Xe=(e,t,o)=>{const{allowCodeExecution:r}=t.customCode;if(e.indexOf("<svg")>=0||e.indexOf("<?xml")>=0)return A(4,"[chart] Parsing input as SVG."),Je(t,!1,o,e);try{const r=JSON.parse(e.replaceAll(/\t|\n|\r/g," "));return Je(t,r,o)}catch(e){return V(r)?ze(t,o):o&&o(!1,new X("[chart] Only JSON configurations and SVG are allowed for this server. If this is your server, JavaScript custom code can be enabled by starting the server with the --allowCodeExecution flag.").setError(e))}};class Ke extends Error{constructor(e,t){super(t),this.status=this.statusCode=e,this.message=t}setStatus(e){return this.status=e,this}setError(e){return this.error=e,e.stack&&(this.stack=e.stack),this}}class Be extends Ke{constructor(e,t){super(400,e||"Bad request"),t&&(this.stack=t.stack)}}const Ye={png:"image/png",jpeg:"image/jpeg",gif:"image/gif",pdf:"application/pdf",svg:"image/svg+xml"};let Qe=0;const Ze=!1,et=[],tt=[],ot=(e,t,o,r)=>{let i=!0;const{id:n,uniqueId:s,type:a,body:l}=r;return e.some((e=>{if(e){let r=e(t,o,n,s,a,l);return void 0!==r&&!0!==r&&(i=r),!0}})),i},rt=async(e,t,o)=>{try{(()=>{const e=process.hrtime.bigint()})();const o=We();Ze;const i=e.body,n=++Qe,s=x().replace(/-/g,"");let a=W(i.type);if(!i||"object"==typeof(r=i)&&null!==r&&0===Object.keys(r).length)throw new Be("The request body is required. Make sure your Content-Type header is correct (accepted are application/json and multipart/form-data).");let l=U(i.infile||i.options||i.data);if(!l&&!i.svg)throw A(2,`Request ${s} from ${e.headers["x-forwarded-for"]||e.connection.remoteAddress} was incorrect. Payload received: ${JSON.stringify(i)}.`),new Be("No correct chart data found. Please make sure you are using application/json or multipart/form-data headers, and that the chart data is in the 'infile', 'options' or 'data' attribute if sending JSON or in the 'svg' if sending SVG.");let c=!1;if(c=ot(et,e,t,{id:n,uniqueId:s,type:a,body:i}),!0!==c)return t.send(c);let p=!1;e.socket.on("close",(()=>{p=!0})),A(4,`[export] Got an incoming HTTP request ${s}.`),i.constr="string"==typeof i.constr&&i.constr||"chart";const u={export:{instr:l,type:a,constr:i.constr[0].toLowerCase()+i.constr.substr(1),height:i.height,width:i.width,scale:i.scale||o.export.scale,globalOptions:U(i.globalOptions,!0),themeOptions:U(i.themeOptions,!0)},customCode:{allowCodeExecution:De,allowFileResources:!1,resources:U(i.resources,!0),callback:i.callback,customCode:i.customCode}};Ze,l&&(u.export.instr=D(l,u.customCode.allowCodeExecution));const d=Me(o,u);if(d.export.options=l,d.payload={svg:i.svg||!1,b64:i.b64||!1,dataOptions:U(i.dataOptions,!0),noDownload:i.noDownload||!1,requestId:s},i.svg&&(e=>["localhost","(10).(.*).(.*).(.*)","(127).(.*).(.*).(.*)","(172).(1[6-9]|2[0-9]|3[0-1]).(.*).(.*)","(192).(168).(.*).(.*)"].some((t=>e.match(`xlink:href="(?:(http://|https://))?${t}`))))(d.payload.svg))throw new Be("SVG potentially contain at least one forbidden URL in xlink:href element.");Ze,await qe(d,((o,r)=>{if(e.socket.removeAllListeners("close"),p)return A(3,"[export] The client closed the connection before the chart was done processing.");if(r)throw r;if(!o||!o.result)throw new Be(`[export] Unexpected return from chart generation, please check your request data: ${s} is ${o.result}.`).setStatus(400);return a=o.options.export.type,ot(tt,e,t,{id:n,body:o.result}),o.result?i.b64?"pdf"===a||"svg"==a?t.send(Buffer.from(o.result,"utf8").toString("base64")):t.send(o.result):(t.header("Content-Type",Ye[a]||"image/png"),i.noDownload||t.attachment(`${e.params.filename||e.body.filename||"chart"}.${a||"png"}`),"svg"===a?t.send(o.result):t.send(Buffer.from(o.result,"base64"))):void 0}))}catch(e){o(e)}var r};const it=d();it.disable("x-powered-by"),it.use(u());const nt=m.memoryStorage(),st=m({storage:nt,limits:{fieldsSize:"50MB"}});it.use(st.any()),it.use(p.json({limit:"50mb"})),it.use(p.urlencoded({extended:!0,limit:"50mb"})),it.use(p.urlencoded({extended:!1,limit:"50mb"}));const at=async e=>{try{if(!e.enable)return!1;if(!e.ssl.enable&&!e.ssl.force){h.createServer(it).listen(e.port,e.host),A(3,`[server] Started HTTP server on ${e.host}:${e.port}.`)}if(e.ssl.enable){let t,o;try{t=await s.readFile(c.join(e.ssl.certPath,"server.key"),"utf8"),o=await s.readFile(c.join(e.ssl.certPath,"server.crt"),"utf8")}catch(t){$(2,t,`[server] Unable to load key/certificate from ${e.ssl.certPath}.`)}if(t&&o){g.createServer(it).listen(e.ssl.port,e.host),A(3,`[server] Started HTTPS server on ${e.host}:${e.ssl.port}.`)}}e.rateLimiting&&e.rateLimiting.enable&&![0,NaN].includes(e.rateLimiting.maxRequests)&&N(it,e.rateLimiting),it.use(d.static(c.join(G,"public"))),(e=>{!!e&&e.get("/health",((e,t)=>{t.send({status:"OK",bootTime:Ne,uptime:Math.floor(((new Date).getTime()-Ne.getTime())/1e3/60)+" minutes",version:je.version,highchartsVersion:ie(),averageProcessingTime:$e(),performedExports:Pe(),failedExports:Ae(),exportAttempts:Ie(),sucessRatio:Pe()/Ie()*100,pool:_e()})}))})(it),(e=>{e.post("/",rt),e.post("/:filename",rt)})(it),(e=>{!!e&&e.get("/",((e,t)=>{t.sendFile(l(G,"public","index.html"))}))})(it),(e=>{!!e&&e.post("/change_hc_version/:newVersion",(async(e,t)=>{const o=process.env.HIGHCHARTS_ADMIN_TOKEN;if(!o||!o.length)return t.send({error:!0,message:"Server not configured to do run-time version changes: HIGHCHARTS_ADMIN_TOKEN not set."});const r=e.get("hc-auth");if(!r||r!==o)return t.send({error:!0,message:"Invalid or missing token: set token in the hc-auth header."});const i=e.params.newVersion;if(i){try{await oe(i)}catch(e){t.send({error:!0,message:e})}t.send({version:ie()})}else t.send({error:!0,message:"No new version supplied."})}))})(it),(e=>{e.use(P),e.use(j)})(it)}catch(e){throw new X("[server] Could not configure and start the server.").setError(e)}};var lt={startServer:at,getExpress:()=>d,getApp:()=>it,use:(e,...t)=>{it.use(e,...t)},get:(e,...t)=>{it.get(e,...t)},post:(e,...t)=>{it.post(e,...t)},enableRateLimiting:e=>N(it,e)},ct={log:A,logWithStack:$,mapToNewConfig:e=>{const t={};for(const[o,r]of Object.entries(e)){const e=C[o]?C[o].split("."):[];e.reduce(((t,o,i)=>t[o]=e.length-1===i?r:t[o]||{}),t)}return t},setOptions:(e,t)=>(t?.length&&(Ge=function(e){const t=e.findIndex((e=>"loadConfig"===e.replace(/-/g,"")));if(t>-1&&e[t+1]){const o=e[t+1];try{if(o&&o.endsWith(".json"))return JSON.parse(i(o))}catch(e){$(2,e,`[config] Unable to load config from the ${o}.`)}}return{}}(t)),Ue(H,Ge),Ge=Fe(H),e&&(Ge=Me(Ge,e,R)),t?.length&&(Ge=function(e,t,o){for(let o=0;o<t.length;o++){let r=t[o].replace(/-/g,"");const i=C[r]?C[r].split("."):[];i.reduce(((n,s,a)=>(i.length-1===a&&void 0!==n[s]&&(t[++o]?n[s]=t[o]||n[s]:(console.log(`Missing argument value for ${r}!`.red,"\n"),e=q())),n[s])),e)}return e}(Ge,t)),Ge),singleExport:async e=>{e.export.instr=e.export.instr||e.export.options,await qe(e,((e,t)=>{if(t)throw t;const{outfile:o,type:r}=e.options.export;n(o||`chart.${r}`,"svg"!==r?Buffer.from(e.result,"base64"):e.result),Ce()}))},startExport:qe,batchExport:e=>{const t=[];for(let o of e.export.batch.split(";"))o=o.split("="),2===o.length&&t.push(new Promise(((t,r)=>{qe({...e,export:{...e.export,infile:o[0],outfile:o[1]}},((e,o)=>{if(o)return r(o);n(e.options.export.outfile,Buffer.from(e.result,"base64")),t()}))})));Promise.all(t).then((()=>{Ce()})).catch((e=>{$(1,e,"[chart] Error encountered during batch export."),process.exit(1)}))},server:lt,startServer:at,killPool:Ce,initPool:async(e={})=>{var t,o;return t=e.customCode&&e.customCode.allowCodeExecution,De=V(t),(o=e.logging&&parseInt(e.logging.level))>=0&&o<=_.levelsDesc.length&&(_.level=o),e.logging&&e.logging.dest&&((e,t)=>{if(_={..._,dest:e||_.dest,file:t||_.file,toFile:!0},0===_.dest.length)return A(1,"[logger] File logging init: no path supplied.");_.dest.endsWith("/")||(_.dest+="/")})(e.logging.dest,e.logging.file||"highcharts-export-server.log"),await te(e.highcharts||{version:"latest"}),await Re({pool:e.pool||{minWorkers:1,maxWorkers:1},puppeteerArgs:e.puppeteer?.args||[]}),e}};export{ct as default};
//# sourceMappingURL=index.esm.js.map
