import"colors";import e,{existsSync as t,mkdirSync as r,appendFile as o,readFileSync as i,writeFileSync as s,promises as n}from"fs";import a,{join as l,posix as c}from"path";import p from"dotenv";import u from"https-proxy-agent";import h from"http";import d from"https";import*as g from"url";import{fileURLToPath as m}from"url";import f from"prompts";import{Pool as v}from"tarn";import{v4 as y}from"uuid";import w from"node:path";import b from"puppeteer";import{randomBytes as T}from"node:crypto";import x from"cors";import k from"express";import E from"multer";import S from"express-rate-limit";async function L(e,t={}){return new Promise(((r,o)=>{const i=(e=>e.startsWith("https")?d:h)(e);i.get(e,t,(e=>{let t="";e.on("data",(e=>{t+=e})),e.on("end",(()=>{t||o("Nothing was fetched from the URL."),e.text=t,r(e)}))})).on("error",(e=>{o(e)}))}))}p.config();const O={puppeteer:{args:{value:[],type:"string[]",description:"Array of arguments to send to puppeteer."}},highcharts:{version:{value:"latest",envLink:"HIGHCHARTS_VERSION",type:"string",description:"Highcharts version to use."},cdnURL:{value:"https://code.highcharts.com/",envLink:"HIGHCHARTS_CDN_URL",type:"string",description:"Highcharts CDN URL of scripts to be used"},coreScripts:{envLink:"HIGHCHARTS_CORE_SCRIPTS",value:["highcharts","highcharts-more","highcharts-3d"],type:"string[]",description:"Highcharts core scripts to fetch."},modules:{envLink:"HIGHCHARTS_MODULES",value:["stock","map","gantt","exporting","export-data","parallel-coordinates","accessibility","annotations-advanced","boost-canvas","boost","data","draggable-points","static-scale","broken-axis","heatmap","tilemap","timeline","treemap","treegraph","item-series","drilldown","histogram-bellcurve","bullet","funnel","funnel3d","pyramid3d","networkgraph","pareto","pattern-fill","pictorial","price-indicator","sankey","arc-diagram","dependency-wheel","series-label","solid-gauge","sonification","stock-tools","streamgraph","sunburst","variable-pie","variwide","vector","venn","windbarb","wordcloud","xrange","no-data-to-display","drag-panes","debugger","dumbbell","lollipop","cylinder","organization","dotplot","marker-clusters","hollowcandlestick","heikinashi"],type:"string[]",description:"Highcharts modules to fetch."},indicators:{envLink:"HIGHCHARTS_INDICATORS",value:["indicators-all"],type:"string[]",description:"Highcharts indicators to fetch."},scripts:{value:["https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js","https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.34/moment-timezone-with-data.min.js"],type:"string[]",description:"Additional direct scripts/optional dependencies (e.g. moment.js)."},forceFetch:{envLink:"HIGHCHARTS_FORCE_FETCH",value:!1,type:"boolean",description:"The flag that determines whether to refetch all scripts after each server rerun."}},export:{infile:{value:!1,type:"string",description:"The input file name along with a type (json or svg). It can be a correct JSON or SVG file."},instr:{value:!1,type:"string",description:"An input in a form of a stringified JSON or SVG file. Overrides the --infile."},options:{value:!1,type:"string",description:"An alias for the --instr option."},outfile:{value:!1,type:"string",description:"The output filename along with a type (jpeg, png, pdf or svg). Ignores the --type flag."},type:{envLink:"EXPORT_TYPE",value:"png",type:"string",description:"The format of the file to export to. Can be jpeg, png, pdf or svg."},constr:{envLink:"EXPORT_CONSTR",value:"chart",type:"string",description:"The constructor to use. Can be chart, stockChart, mapChart or ganttChart."},defaultHeight:{envLink:"EXPORT_DEFAULT_HEIGHT",value:400,type:"number",description:"The default height of the exported chart. Used when not found any value set."},defaultWidth:{envLink:"EXPORT_DEFAULT_WIDTH",value:600,type:"number",description:"The default width of the exported chart. Used when not found any value set."},defaultScale:{envLink:"EXPORT_DEFAULT_SCALE",value:1,type:"number",description:"The default scale of the exported chart. Ranges between 0.1 and 5."},height:{type:"number",value:!1,description:"The default height of the exported chart. Overrides the option in the chart settings."},width:{type:"number",value:!1,description:"The width of the exported chart. Overrides the option in the chart settings."},scale:{value:!1,type:"number",description:"The scale of the exported chart. Ranges between 1 and 5."},globalOptions:{value:!1,type:"string",description:"A stringified JSON or a filename with options to be passed into the Highcharts.setOptions."},themeOptions:{value:!1,type:"string",description:"A stringified JSON or a filename with theme options to be passed into the Highcharts.setOptions."},batch:{value:!1,type:"string",description:'Starts a batch job. A string that contains input/output pairs: "in=out;in=out;..".'},rasterizationTimeout:{envLink:"EXPORT_RASTERIZATION_TIMEOUT",value:1500,type:"number",description:"The specified duration, in milliseconds, to wait for rendering a webpage."}},customCode:{allowCodeExecution:{envLink:"CUSTOM_CODE_ALLOW_CODE_EXECUTION",value:!1,type:"boolean",description:"Controls whether the execution of arbitrary code is allowed during the exporting process."},allowFileResources:{envLink:"CUSTOM_CODE_ALLOW_FILE_RESOURCES",value:!0,type:"boolean",description:"Controls the ability to inject resources from the filesystem. This setting has no effect when running as a server."},customCode:{value:!1,type:"string",description:"A function to be called before chart initialization. Can be a filename with the js extension."},callback:{value:!1,type:"string",description:"A JavaScript file with a function to run on construction."},resources:{value:!1,type:"string",description:"An additional resource in a form of stringified JSON. It can contain files, js and css sections."},loadConfig:{value:!1,type:"string",description:"A file that contains a pre-defined config to use."},createConfig:{value:!1,type:"string",description:"Allows to set options through a prompt and save in a provided config file."}},server:{enable:{envLink:"SERVER_ENABLE",value:!1,type:"boolean",cliName:"enableServer",description:"If set to true, the server starts on 0.0.0.0."},host:{envLink:"SERVER_HOST",value:"0.0.0.0",type:"string",description:"The hostname of the server. Additionally, it starts a server listening on the provided hostname."},port:{envLink:"SERVER_PORT",value:7801,type:"number",description:"The port to be used for the server when enabled."},ssl:{enable:{envLink:"SERVER_SSL_ENABLE",value:!1,type:"boolean",cliName:"enableSsl",description:"If set to true, enables the SSL protocol."},force:{envLink:"SERVER_SSL_FORCE",value:!1,type:"boolean",cliName:"sslForced",description:"If set to true, the server is forced to serve only over HTTPS."},port:{envLink:"SERVER_SSL_PORT",value:443,type:"number",cliName:"sslPort",description:"The port on which to run the SSL server."},certPath:{envLink:"SERVER_SSL_CERT_PATH",value:"",type:"string",description:"The path to the SSL certificate/key file."}},rateLimiting:{enable:{envLink:"RATE_LIMITING_ENABLE",value:!1,type:"boolean",cliName:"enableRateLimiting",description:"Enables rate limiting for the server."},maxRequests:{envLink:"RATE_LIMITING_MAX_REQUESTS",value:10,type:"number",description:"The maximum number of requests allowed in one minute."},window:{envLink:"RATE_LIMITING_WINDOW",value:1,type:"number",description:"The time window, in minutes, for rate limiting."},delay:{envLink:"RATE_LIMITING_DELAY",value:0,type:"number",description:"The delay duration for each successive request before reaching the maximum limit."},trustProxy:{envLink:"RATE_LIMITING_TRUST_PROXY",value:!1,type:"boolean",description:"Set this to true if the server is behind a load balancer."},skipKey:{envLink:"RATE_LIMITING_SKIP_KEY",value:"",type:"number|string",description:"Allows bypassing the rate limiter and should be provided with the skipToken argument"},skipToken:{envLink:"RATE_LIMITING_SKIP_TOKEN",value:"",type:"number|string",description:"Allows bypassing the rate limiter and should be provided with the skipKey argument."}}},pool:{minWorkers:{envLink:"POOL_MIN_WORKERS",value:4,type:"number",description:"The number of minimum and initial pool workers to spawn."},maxWorkers:{envLink:"POOL_MAX_WORKERS",value:8,type:"number",description:"The number of maximum pool workers to spawn."},workLimit:{envLink:"POOL_WORK_LIMIT",value:40,type:"number",description:"The number of work pieces that can be performed before restarting the process."},acquireTimeout:{envLink:"POOL_ACQUIRE_TIMEOUT",value:5e3,type:"number",description:"The duration, in milliseconds, to wait for acquiring a resource."},createTimeout:{envLink:"POOL_CREATE_TIMEOUT",value:5e3,type:"number",description:"The duration, in milliseconds, to wait for creating a resource."},destroyTimeout:{envLink:"POOL_DESTROY_TIMEOUT",value:5e3,type:"number",description:"The duration, in milliseconds, to wait for destroying a resource."},idleTimeout:{envLink:"POOL_IDLE_TIMEOUT",value:3e4,type:"number",description:"The duration, in milliseconds, after which an idle resource is destroyed."},createRetryInterval:{envLink:"POOL_CREATE_RETRY_INTERVAL",value:200,type:"number",description:"The duration, in milliseconds, to wait before retrying the create process in case of a failure."},reaperInterval:{envLink:"POOL_REAPER_INTERVAL",value:1e3,type:"number",description:"The duration, in milliseconds, after which the check for idle resources to destroy is triggered."},benchmarking:{envLink:"POOL_BENCHMARKING",value:!1,type:"boolean",description:"Indicate whether to show statistics for the pool of resources or not."},listenToProcessExits:{envLink:"POOL_LISTEN_TO_PROCESS_EXITS",value:!0,type:"boolean",description:"Decides whether or not to attach process.exit handlers."}},logging:{level:{envLink:"LOGGING_LEVEL",value:4,type:"number",cliName:"logLevel",description:"The logging level to be used."},file:{envLink:"LOGGING_FILE",value:"highcharts-export-server.log",type:"string",cliName:"logFile",description:"The name of a log file. The `logDest` option also needs to be set to enable file logging."},dest:{envLink:"LOGGING_DEST",value:"log/",type:"string",cliName:"logDest",description:"The path to store log files. This also enables file logging."}},ui:{enable:{envLink:"UI_ENABLE",value:!1,type:"boolean",cliName:"enableUi",description:"Enables or disables the user interface (UI) for the export server."},route:{envLink:"UI_ROUTE",value:"/",type:"string",cliName:"uiRoute",description:"The endpoint route to which the user interface (UI) should be attached."}},other:{noLogo:{envLink:"OTHER_NO_LOGO",value:!1,type:"boolean",description:"Skip printing the logo on a startup. Will be replaced by a simple text."}},payload:{}},C={puppeteer:[{type:"list",name:"args",message:"Puppeteer arguments",initial:O.puppeteer.args.value.join(","),separator:","}],highcharts:[{type:"text",name:"version",message:"Highcharts version",initial:O.highcharts.version.value},{type:"text",name:"cdnURL",message:"The url of CDN",initial:O.highcharts.cdnURL.value},{type:"multiselect",name:"modules",message:"Available modules",instructions:"Space: Select specific, A: Select all, Enter: Confirm.",choices:O.highcharts.modules.value},{type:"list",name:"scripts",message:"Custom scripts",initial:O.highcharts.scripts.value.join(","),separator:","},{type:"toggle",name:"forceFetch",message:"Should refetch all the scripts after each server rerun",initial:O.highcharts.forceFetch.value}],export:[{type:"select",name:"type",message:"The default type of a file to export to",hint:`Default: ${O.export.type.value}`,initial:0,choices:["png","jpeg","pdf","svg"]},{type:"select",name:"constr",message:"The default constructor for Highcharts to use",hint:`Default: ${O.export.constr.value}`,initial:0,choices:["chart","stockChart","mapChart","ganttChart"]},{type:"number",name:"defaultHeight",message:"The default fallback height of the exported chart",initial:O.export.defaultHeight.value},{type:"number",name:"defaultWidth",message:"The default fallback width of the exported chart",initial:O.export.defaultWidth.value},{type:"number",name:"defaultScale",message:"The default fallback scale of the exported chart",initial:O.export.defaultScale.value,min:.1,max:5},{type:"number",name:"rasterizationTimeout",message:"The number of milliseconds to wait for rendering a webpage",initial:O.export.rasterizationTimeout.value}],customCode:[{type:"toggle",name:"allowCodeExecution",message:"Allow to execute custom code",initial:O.customCode.allowCodeExecution.value},{type:"toggle",name:"allowFileResources",message:"Allow file resources",initial:O.customCode.allowFileResources.value}],server:[{type:"toggle",name:"enable",message:"Starts a server on 0.0.0.0",initial:O.server.enable.value},{type:"text",name:"host",message:"A hostname of a server",initial:O.server.host.value},{type:"number",name:"port",message:"A port of a server",initial:O.server.port.value},{type:"toggle",name:"ssl.enable",message:"Enable SSL protocol",initial:O.server.ssl.enable.value},{type:"toggle",name:"ssl.force",message:"Force to only serve over HTTPS",initial:O.server.ssl.force.value},{type:"number",name:"ssl.port",message:"Port on which to run the SSL server",initial:O.server.ssl.port.value},{type:"text",name:"ssl.certPath",message:"A path where to find the SSL certificate/key",initial:O.server.ssl.certPath.value},{type:"toggle",name:"rateLimiting.enable",message:"Enable rate limiting",initial:O.server.rateLimiting.enable.value},{type:"number",name:"rateLimiting.maxRequests",message:"Max requests allowed in a one minute",initial:O.server.rateLimiting.maxRequests.value},{type:"number",name:"rateLimiting.window",message:"The time window in minutes for rate limiting",initial:O.server.rateLimiting.window.value},{type:"number",name:"rateLimiting.delay",message:"The amount to delay each successive request before hitting the max",initial:O.server.rateLimiting.delay.value},{type:"toggle",name:"rateLimiting.trustProxy",message:"Set this to true if behind a load balancer",initial:O.server.rateLimiting.trustProxy.value},{type:"text",name:"rateLimiting.skipKey",message:"Allows bypassing the rate limiter and should be provided with skipToken argument",initial:O.server.rateLimiting.skipKey.value},{type:"text",name:"rateLimiting.skipToken",message:"Allows bypassing the rate limiter and should be provided with skipKey argument",initial:O.server.rateLimiting.skipToken.value}],pool:[{type:"number",name:"minWorkers",message:"The number of initial workers to spawn",initial:O.pool.minWorkers.value},{type:"number",name:"maxWorkers",message:"The number of max workers to spawn",initial:O.pool.maxWorkers.value},{type:"number",name:"workLimit",message:"The pieces of work that can be performed before restarting a puppeteer process",initial:O.pool.workLimit.value},{type:"number",name:"acquireTimeout",message:"The number of milliseconds to wait for acquiring a resource",initial:O.pool.acquireTimeout.value},{type:"number",name:"createTimeout",message:"The number of milliseconds to wait for creating a resource",initial:O.pool.createTimeout.value},{type:"number",name:"destroyTimeout",message:"The number of milliseconds to wait for destroying a resource",initial:O.pool.destroyTimeout.value},{type:"number",name:"idleTimeout",message:"The number of milliseconds after an idle resource is destroyed",initial:O.pool.idleTimeout.value},{type:"number",name:"createRetryInterval",message:"The number of milliseconds after the create process is retried in case of fail",initial:O.pool.createRetryInterval.value},{type:"number",name:"reaperInterval",message:"The number of milliseconds after the check for idle resources to destroy is triggered",initial:O.pool.reaperInterval.value},{type:"toggle",name:"benchmarking",message:"Set benchmarking",initial:O.pool.benchmarking.value},{type:"toggle",name:"listenToProcessExits",message:"Set to false in order to skip attaching process.exit handlers",initial:O.pool.listenToProcessExits.value}],logging:[{type:"number",name:"level",message:"The log level (0: silent, 1: error, 2: warning, 3: notice, 4: verbose)",initial:O.logging.level.value,round:0,min:0,max:4},{type:"text",name:"file",message:"A name of a log file. The --logDest also needs to be set to enable file logging",initial:O.logging.file.value},{type:"text",name:"dest",message:"A path to log files. It enables file logging",initial:O.logging.dest.value}],ui:[{type:"toggle",name:"enable",message:"Enable UI for the export server",initial:O.ui.enable.value},{type:"text",name:"route",message:"A route to attach the UI to",initial:O.ui.route.value}],other:[{type:"toggle",name:"noLogo",message:"Skip printing the logo on a startup. Will be replaced by a simple text",initial:O.other.noLogo.value}]},R=["options","globalOptions","themeOptions","resources","payload"],I={},_=(e,t="")=>{Object.keys(e).forEach((r=>{if(!["puppeteer","highcharts"].includes(r)){const o=e[r];void 0===o.value?_(o,`${t}.${r}`):I[o.cliName||r]=`${t}.${r}`.substring(1)}}))};_(O);const A=["red","yellow","blue","gray"];let $={toConsole:!0,toFile:!1,pathCreated:!1,levelsDesc:[{title:"error",color:A[0]},{title:"warning",color:A[1]},{title:"notice",color:A[2]},{title:"verbose",color:A[3]}],listeners:[]};for(const[e,t]of Object.entries(O.logging))$[e]=t.value;const N=(e,i)=>{$.toFile&&($.pathCreated||(!t($.dest)&&r($.dest),$.pathCreated=!0),o(`${$.dest}${$.file}`,[i].concat(e).join(" ")+"\n",(e=>{e&&(console.log(`[logger] Unable to write to log file: ${e}`),$.toFile=!1)})))},P=(...e)=>{const[t,...r]=e,{level:o,levelsDesc:i}=$;if(0===t||t>o||o>i.length)return;const s=`${(new Date).toString().split("(")[0].trim()} [${i[t-1].title}] -`;$.listeners.forEach((e=>{e(s,r.join(" "))})),N(r,s),$.toConsole&&console.log.apply(void 0,[s.toString()[$.levelsDesc[t-1].color]].concat(r))},j=(e,t,r)=>{P(e,(r||t.message)[A[e-1]]);const o=t.message!==t.stackMessage||void 0===t.stackMessage?t.stack:t.stack.split("\n").slice(1).join("\n");$.toConsole&&console.log(o),N([o])},H=e=>{e>=0&&e<=$.levelsDesc.length&&($.level=e)},U=(e,t)=>{if($={...$,dest:e||$.dest,file:t||$.file,toFile:!0},0===$.dest.length)return P(1,"[logger] File logging init: no path supplied.");$.dest.endsWith("/")||($.dest+="/")},W=m(new URL("../.",import.meta.url)),M=(e,t)=>{const r=["png","jpeg","pdf","svg"];if(t){const o=t.split(".").pop();r.includes(o)&&e!==o&&(e=o)}return{"image/png":"png","image/jpeg":"jpeg","application/pdf":"pdf","image/svg+xml":"svg"}[e]||r.find((t=>t===e))||"png"},F=(e=!1,t)=>{const r=["js","css","files"];let o=e,s=!1;if(t&&e.endsWith(".json"))try{e?e&&e.endsWith(".json")?o=D(i(e,"utf8")):(o=D(e),!0===o&&(o=D(i("resources.json","utf8")))):o=D(i("resources.json","utf8"))}catch(e){return j(3,e,"[cli] No resources found.")}else o=D(e),t||delete o.files;for(const e in o)r.includes(e)?s||(s=!0):delete o[e];return s?(o.files&&(o.files=o.files.map((e=>e.trim())),(!o.files||o.files.length<=0)&&delete o.files),o):P(3,"[cli] No resources found.")};function D(e,t){try{const r=JSON.parse("string"!=typeof e?JSON.stringify(e):e);return"string"!=typeof r&&t?JSON.stringify(r):r}catch{return!1}}const q=e=>{if(null===e||"object"!=typeof e)return e;const t=Array.isArray(e)?[]:{};for(const r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=q(e[r]));return t},G=(e,t)=>JSON.stringify(e,((e,r)=>("string"==typeof r&&((r=r.trim()).startsWith("function(")||r.startsWith("function ("))&&r.endsWith("}")&&(r=t?`EXP_FUN${(r+"").replaceAll(/\n|\t|\r/g," ")}EXP_FUN`:void 0),"function"==typeof r?`EXP_FUN${(r+"").replaceAll(/\n|\t|\r/g," ")}EXP_FUN`:r))).replaceAll(/"EXP_FUN|EXP_FUN"/g,"");function V(){console.log("Usage of CLI arguments:".bold,"\n------",`\nFor more detailed information visit readme at: ${"https://github.com/highcharts/node-export-server#readme".bold.yellow}.`);const e=t=>{for(const[r,o]of Object.entries(t))if(Object.prototype.hasOwnProperty.call(o,"value")){let e=`  --${o.cliName||r} ${("<"+o.type+">").green} `;if(e.length<48)for(let t=e.length;t<48;t++)e+=".";console.log(e,o.description,`[Default: ${o.value.toString().bold}]`.blue)}else e(o)};Object.keys(O).forEach((t=>{["puppeteer","highcharts"].includes(t)||(console.log(`\n${t.toUpperCase()}`.red),e(O[t]))})),console.log("\n")}const J=e=>!["false","undefined","null","NaN","0",""].includes(e)&&!!e,K=(e,t)=>{if(e&&"string"==typeof e)return(e=e.trim()).endsWith(".js")?!!t&&K(i(e,"utf8")):e.startsWith("function()")||e.startsWith("function ()")||e.startsWith("()=>")||e.startsWith("() =>")?`(${e})()`:e.replace(/;$/,"")};class X extends Error{constructor(e){super(),this.message=e,this.stackMessage=e}setError(e){return this.error=e,e.name&&(this.name=e.name),e.stack&&(this.stackMessage=e.message,this.stack=e.stack),this}}p.config();const z=l(W,".cache"),B={cdnURL:"https://code.highcharts.com/",activeManifest:{},sources:"",hcVersion:""};let Y=!1;const Q=()=>B.hcVersion=B.sources.substr(0,B.sources.indexOf("*/")).replace("/*","").replace("*/","").replace(/\n/g,"").trim(),Z=async(e,t)=>{e.endsWith(".js")&&(e=e.substring(0,e.length-3)),P(4,`[cache] Fetching script - ${e}.js`);const r=t?{agent:t,timeout:+process.env.PROXY_SERVER_TIMEOUT||5e3}:{},o=await L(`${e}.js`,r);if(200===o.statusCode)return o.text;throw new X(`[cache] Problem with fetching script${o.statusCode}`)},ee=async(e,t)=>{const{coreScripts:r,modules:o,indicators:i,scripts:n}=e,a="latest"!==e.version&&e.version?`${e.version}/`:"";P(3,`[cache] Updating cache to Highcharts ${a}.`);const l=[...r.map((e=>`${a}${e}`)),...o.map((e=>"map"===e?`maps/${a}modules/${e}`:`${a}modules/${e}`)),...i.map((e=>`stock/${a}indicators/${e}`))];let c;const p=process.env.PROXY_SERVER_HOST,h=process.env.PROXY_SERVER_PORT;if(p&&h)try{c=new u({host:p,port:+h})}catch(e){throw new X("[cache] Could not create a Proxy Agent.").setError(e)}const d={};try{return B.sources=(await Promise.all([...l.map((async t=>{const r=await Z(`${e.cdnURL||B.cdnURL}${t}`,c);return"string"==typeof r&&(d[t.replace(/(.*)\/|(.*)modules\/|stock\/(.*)indicators\/|maps\/(.*)modules\//gi,"")]=1),r})),...n.map((e=>Z(e,c)))])).join(";\n"),Q(),s(t,B.sources),d}catch(e){throw new X("[cache] Unable to update local Highcharts cache.").setError(e)}},te=async e=>{let o;const n=l(z,"manifest.json"),a=l(z,"sources.js");if(Y=e,!t(z)&&r(z),!t(n)||e.forceFetch)P(3,"[cache] Fetching and caching Highcharts dependencies."),o=await ee(e,a);else{let t=!1;const r=JSON.parse(i(n));if(r.modules&&Array.isArray(r.modules)){const e={};r.modules.forEach((t=>e[t]=1)),r.modules=e}const{modules:s,coreScripts:l,indicators:c}=e,p=s.length+l.length+c.length;r.version!==e.version?(P(2,"[cache] Highcharts version mismatch in cache, need to re-fetch."),t=!0):Object.keys(r.modules||{}).length!==p?(P(2,"[cache] Cache and requested modules do not match, need to re-fetch."),t=!0):t=(e.modules||[]).some((e=>{if(!r.modules[e])return P(2,`[cache] The ${e} missing in cache, need to re-fetch.`),!0})),t?o=await ee(e,a):(P(3,"[cache] Dependency cache is up to date, proceeding."),B.sources=i(a,"utf8"),o=r.modules,Q())}await(async(e,t)=>{const r={version:e.version,modules:t||{}};B.activeManifest=r,P(3,"[cache] Writing a new manifest.");try{s(l(z,"manifest.json"),JSON.stringify(r),"utf8")}catch(e){throw new X("[cache] Error writing cache manifest.").setError(e)}})(e,o)};var re=async e=>!!Y&&await te(Object.assign(Y,{version:e})),oe=()=>B,ie=()=>B.hcVersion;let se={};const ne=()=>se,ae=(e,t,r=[])=>{const o=q(e);for(const[e,s]of Object.entries(t))o[e]="object"!=typeof(i=s)||Array.isArray(i)||null===i||r.includes(e)||void 0===o[e]?void 0!==s?s:o[e]:ae(o[e],s,r);var i;return o};function le(e,t={},r=""){Object.keys(e).forEach((o=>{const i=e[o],s=t&&t[o];let n;void 0===i.value?le(i,s,`${r}.${o}`):(void 0!==s&&(i.value=s),i.envLink&&("boolean"===i.type?i.value=J([process.env[i.envLink],i.value].find((e=>e||"false"===e))):"number"===i.type?(n=+process.env[i.envLink],i.value=n>=0?n:i.value):i.type.indexOf("]")>=0&&process.env[i.envLink]?i.value=process.env[i.envLink].split(","):i.value=process.env[i.envLink]||i.value))}))}function ce(e){let t={};for(const[r,o]of Object.entries(e))t[r]=Object.prototype.hasOwnProperty.call(o,"value")?o.value:ce(o);return t}function pe(e,t,r){for(;t.length>1;){const o=t.shift();return Object.prototype.hasOwnProperty.call(e,o)||(e[o]={}),e[o]=pe(Object.assign({},e[o]),t,r),e}return e[t[0]]=r,e}const ue=T(64).toString("base64url"),he=w.join("tmp",`puppeteer-${ue}`),de=[`--user-data-dir=${w.join(he,"profile")}`,"--autoplay-policy=user-gesture-required","--disable-background-networking","--disable-background-timer-throttling","--disable-backgrounding-occluded-windows","--disable-breakpad","--disable-client-side-phishing-detection","--disable-component-update","--disable-default-apps","--disable-dev-shm-usage","--disable-domain-reliability","--disable-extensions","--disable-features=AudioServiceOutOfProcess","--disable-hang-monitor","--disable-ipc-flooding-protection","--disable-notifications","--disable-offer-store-unmasked-wallet-cards","--disable-popup-blocking","--disable-print-preview","--disable-prompt-on-repost","--disable-renderer-backgrounding","--disable-session-crashed-bubble","--disable-setuid-sandbox","--disable-speech-api","--disable-sync","--hide-crash-restore-bubble","--hide-scrollbars","--ignore-gpu-blacklist","--metrics-recording-only","--mute-audio","--no-default-browser-check","--no-first-run","--no-pings","--no-sandbox","--no-zygote","--password-store=basic","--use-mock-keychain"],ge=g.fileURLToPath(new URL(".",import.meta.url)),me=e.readFileSync(ge+"/../templates/template.html","utf8");let fe;const ve=async e=>{await e.setContent(me),await e.addScriptTag({path:ge+"/../.cache/sources.js"}),await e.evaluate((()=>window.setupHighcharts())),e.on("pageerror",(async t=>{await e.$eval("#container",((e,t)=>{window._displayErrors&&(e.innerHTML=t)}),`<h1>Chart input data error</h1>${t.toString()}`)}))},ye=async(e,t=!1)=>{try{t?(await e.goto("about:blank"),await ve(e)):await e.evaluate((()=>{document.body.innerHTML='<div id="chart-container"><div id="container"></div></div>'}))}catch(e){j(2,e,"[browser] Could not clear the page content.")}},we=async()=>{if(!fe)return!1;const e=await fe.newPage();return await e.setCacheEnabled(!1),await ve(e),e},be=async()=>(fe?.isConnected()&&await fe.close(),!0);const Te=g.fileURLToPath(new URL(".",import.meta.url)),xe=(e,t,r)=>e.evaluate(((e,t)=>window.triggerExport(e,t)),t,r);var ke=async(e,t,r)=>{const o=[],s=async e=>{for(const e of o)await e.dispose();await e.evaluate((()=>{const[,...e]=document.getElementsByTagName("script"),[,...t]=document.getElementsByTagName("style"),[...r]=document.getElementsByTagName("link");for(const o of[...e,...t,...r])o.remove()}))};try{P(4,"[export] Determining export path.");const n=r.export;await e.evaluate((()=>requestAnimationFrame((()=>{}))));const l=n?.options?.chart?.displayErrors&&oe().activeManifest.modules.debugger;let c;if(await e.evaluate((e=>window._displayErrors=e),l),t.indexOf&&(t.indexOf("<svg")>=0||t.indexOf("<?xml")>=0)){if(P(4,"[export] Treating as SVG."),"svg"===n.type)return t;c=!0,await e.setContent((e=>`\n<!DOCTYPE html>\n<html lang='en-US'>\n  <head>\n    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">\n    <title>Highcarts Export</title>\n  </head>\n  <style>\n    \n\nhtml, body {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n#table-div, #sliders, #datatable, #controls, .ld-row {\n  display: none;\n  height: 0;\n}\n\n#chart-container {\n  box-sizing: border-box;\n  margin: 0;\n  overflow: auto;\n  font-size: 0;\n}\n\n#chart-container > figure, div {\n  margin-top: 0 !important;\n  margin-bottom: 0 !important;\n}\n\n\n  </style>\n  <body>\n    <div id="chart-container">\n      ${e}\n    </div>\n  </body>\n</html>\n\n`)(t))}else P(4,"[export] Treating as config."),n.strInj?await xe(e,{chart:{height:n.height,width:n.width}},r):(t.chart.height=n.height,t.chart.width=n.width,await xe(e,t,r));const p=r.customCode.resources;if(p){if(p.js&&o.push(await e.addScriptTag({content:p.js})),p.files)for(const t of p.files)try{const r=!t.startsWith("http");o.push(await e.addScriptTag(r?{content:i(t,"utf8")}:{url:t}))}catch(e){j(2,e,`[export] JS file ${t} cannot be loaded.`)}if(p.css){let t=p.css.match(/@import\s*([^;]*);/g);if(t)for(let i of t)i&&(i=i.replace("url(","").replace("@import","").replace(/"/g,"").replace(/'/g,"").replace(/;/,"").replace(/\)/g,"").trim(),i.startsWith("http")?o.push(await e.addStyleTag({url:i})):r.customCode.allowFileResources&&o.push(await e.addStyleTag({path:a.join(Te,i)})));o.push(await e.addStyleTag({content:p.css.replace(/@import\s*([^;]*);/g,"")||" "}))}}const u=c?await e.$eval("#chart-container svg:first-of-type",((e,t)=>({chartHeight:e.height.baseVal.value*t,chartWidth:e.width.baseVal.value*t})),parseFloat(n.scale)):await e.evaluate((()=>{const{chartHeight:e,chartWidth:t}=window.Highcharts.charts[0];return{chartHeight:e,chartWidth:t}})),h=Math.ceil(u?.chartHeight||n.height),d=Math.ceil(u?.chartWidth||n.width);await e.setViewport({height:h,width:d,deviceScaleFactor:c?1:parseFloat(n.scale)});const g=c?e=>{document.body.style.zoom=e,document.body.style.margin="0px"}:()=>{document.body.style.zoom=1};await e.evaluate(g,parseFloat(n.scale));const{height:m,width:f,x:v,y:y}=await(e=>e.$eval("#chart-container",(e=>{const{x:t,y:r,width:o,height:i}=e.getBoundingClientRect();return{x:t,y:r,width:o,height:Math.trunc(i>1?i:500)}})))(e);let w;if(c||await e.setViewport({width:Math.round(f),height:Math.round(m),deviceScaleFactor:parseFloat(n.scale)}),"svg"===n.type)w=await(e=>e.$eval("#container svg:first-of-type",(e=>e.outerHTML)))(e);else if("png"===n.type||"jpeg"===n.type)w=await((e,t,r,o,i)=>Promise.race([e.screenshot({type:t,encoding:r,clip:o,omitBackground:"png"==t}),new Promise(((e,t)=>setTimeout((()=>t(new X("Rasterization timeout"))),i||1500)))]))(e,n.type,"base64",{width:d,height:h,x:v,y:y},n.rasterizationTimeout);else{if("pdf"!==n.type)throw new X(`[export] Unsupported output format ${n.type}.`);w=await((e,t,r,o)=>e.pdf({height:t+1,width:r,encoding:o}))(e,h,d,"base64")}return await e.evaluate((()=>{if("undefined"!=typeof Highcharts){const e=Highcharts.charts;if(Array.isArray(e)&&e.length)for(const t of e)t&&t.destroy(),Highcharts.charts.shift()}})),await s(e),w}catch(t){return await s(e),t}};let Ee,Se=0,Le=0,Oe=0,Ce=0,Re=0,Ie={},_e=!1;const Ae={create:async()=>{const e=y();let t=!1;const r=(new Date).getTime();try{if(t=await we(),!t||t.isClosed())throw new X("Page is invalid or closed.");P(3,`[pool] Successfully created a worker ${e} - took ${(new Date).getTime()-r} ms.`)}catch(e){throw new X("Error when creating a new page").setError(e)}return{id:e,page:t,workCount:Math.round(Math.random()*(Ie.workLimit/2))}},validate:async e=>Ie.workLimit&&++e.workCount>Ie.workLimit?(P(3,`[pool] Worker failed validation: exceeded work limit (limit is ${Ie.workLimit})`),!1):(await ye(e.page,!0),!0),destroy:e=>{P(3,`[pool] Destroying pool entry ${e.id}.`),e.page&&e.page.close()}},$e=async e=>{if(Ee=e.puppeteerArgs,await(async e=>{const t=[...de,...e||[]];if(!fe){let e=0;const r=async()=>{try{P(3,`[browser] Attempting to get a browser instance (try ${++e}).`),fe=await b.launch({headless:"new",args:t,userDataDir:"./tmp/"})}catch(t){if(j(1,t,"[browser] Could not launch a browser instance."),!(e<25))throw t;P(3,`[browser] Retry to open a browser (${e} out of 25).`),await new Promise((e=>setTimeout(e,4e3))),await r()}};try{await r()}catch(e){throw new X("[browser] Max retries to open a browser instance reached.").setError(e)}if(!fe)throw new X("[browser] Cannot find a browser to open.")}return fe})(Ee),Ie=e&&e.pool?{...e.pool}:{},P(3,`[pool] Initializing pool with workers: min ${Ie.minWorkers}, max ${Ie.maxWorkers}.`),_e)return P(4,"[pool] Already initialized, please kill it before creating a new one.");Ie.listenToProcessExits&&(P(3,"[pool] Attaching exit listeners to the process."),process.on("exit",(async e=>{P(4,`Process exited with code ${e}.`),await Ne()})),process.on("SIGINT",((e,t)=>{P(4,`The ${e} event with code: ${t}.`),process.exit(1)})),process.on("SIGTERM",((e,t)=>{P(4,`The ${e} event with code: ${t}.`),process.exit(1)})),process.on("uncaughtException",((e,t)=>{j(1,e,`The ${t} error.`),process.exit(1)}))),parseInt(Ie.minWorkers)>parseInt(Ie.maxWorkers)&&(Ie.minWorkers=Ie.maxWorkers);try{_e=new v({...Ae,min:parseInt(Ie.minWorkers),max:parseInt(Ie.maxWorkers),acquireTimeoutMillis:Ie.acquireTimeout,createTimeoutMillis:Ie.createTimeout,destroyTimeoutMillis:Ie.destroyTimeout,idleTimeoutMillis:Ie.idleTimeout,createRetryIntervalMillis:Ie.createRetryInterval,reapIntervalMillis:Ie.reaperInterval,propagateCreateError:!1}),_e.on("release",(async e=>{await ye(e.page,!1),P(4,`[pool] Releasing a worker of an id ${e.id}.`)})),_e.on("destroySuccess",((e,t)=>{P(4,`[pool] Destroyed a worker of an id ${t.id}.`)}));const e=[];for(let t=0;t<Ie.minWorkers;t++)try{const t=await _e.acquire().promise;e.push(t)}catch(e){j(2,e,"[pool] Could not create an initial resource.")}e.forEach((e=>{_e.release(e)})),P(3,"[pool] The pool is ready"+(e.length?` with ${e.length} initial resources waiting.`:"."))}catch(e){throw await be(),new X("[pool] Could not create the pool of workers.").setError(e)}};async function Ne(){return P(3,"[pool] Killing all workers."),_e?.destroyed||_e&&await _e.destroy(),be()}const Pe=async(e,t)=>{let r;try{if(P(4,"[pool] Work received, starting to process."),++Le,Ie.benchmarking&&je(),!_e)throw new X("Work received, but pool has not been started.");try{P(4,"[pool] Acquiring a worker handle."),r=await _e.acquire().promise}catch(e){throw new X("Error when acquiring available entry.").setError(e)}if(P(4,"[pool] Acquired a worker handle."),!r.page)throw new X("Resolved worker page is invalid: pool setup is wonky.");let o=(new Date).getTime();P(4,`[pool] Starting work on pool entry ${r.id}.`);const i=await ke(r.page,e,t);if(i instanceof Error)throw"Rasterization timeout"===i.message&&(r.page.close(),r.page=await we()),new X("Error encountered during export.").setError(i);_e.release(r);const s=(new Date).getTime()-o;return Oe+=s,Re=Oe/++Se,P(4,`[pool] Work completed in ${s} ms.`),{result:i,options:t}}catch(e){throw++Ce,r&&_e.release(r),new X(`[pool] In pool.postWork: ${e.message}`).setError(e)}};function je(){const{min:e,max:t}=_e;P(4,`[pool] The minimum number of resources allowed by pool: ${e}.`),P(4,`[pool] The maximum number of resources allowed by pool: ${t}.`),P(4,`[pool] The number of resources that are currently available: ${_e.numFree()}.`),P(4,`[pool] The number of resources that are currently acquired: ${_e.numUsed()}.`),P(4,`[pool] The number of callers waiting to acquire a resource: ${_e.numPendingAcquires()}.`)}var He=()=>({min:_e.min,max:_e.max,available:_e.numFree(),inUse:_e.numUsed(),pendingAcquire:_e.numPendingAcquires()}),Ue=()=>Le,We=()=>Ce,Me=()=>Re,Fe=()=>Se;let De=!1;const qe=async(e,t)=>{P(4,"[chart] Starting exporting process.");const r=((e,t={})=>{let r={};return e.svg?(r=q(t),r.export.type=e.type||e.export.type,r.export.scale=e.scale||e.export.scale,r.export.outfile=e.outfile||e.export.outfile,r.payload={svg:e.svg}):r=ae(t,e,R),r.export.outfile=r.export?.outfile||`chart.${r.export?.type||"png"}`,r})(e,ne()),o=r.export;if(r.payload?.svg&&""!==r.payload.svg)try{return P(4,"[chart] Attempting to export from a SVG input."),Ke(r.payload.svg.trim(),r,t)}catch(e){return t(!1,new X("[chart] Error loading SVG input.").setError(e))}if(o.infile&&o.infile.length)try{return P(4,"[chart] Attempting to export from an input file."),r.export.instr=i(o.infile,"utf8"),Ke(r.export.instr.trim(),r,t)}catch(e){return t(!1,new X("[chart] Error loading input file.").setError(e))}if(o.instr&&""!==o.instr||o.options&&""!==o.options)try{return P(4,"[chart] Attempting to export from a raw input."),J(r.customCode?.allowCodeExecution)?Je(r,t):"string"==typeof o.instr?Ke(o.instr.trim(),r,t):Ve(r,o.instr||o.options,t)}catch(e){return t(!1,new X("[chart] Error loading raw input.").setError(e))}return t(!1,new X("[chart] No valid input specified. Check if at least one of the following parameters is correctly set: 'infile', 'instr', 'options', or 'svg'."))},Ge=e=>{const{chart:t,exporting:r}=e.export?.options||D(e.export?.instr),o=D(e.export?.globalOptions);let i=e.export?.scale||r?.scale||o?.exporting?.scale||e.export?.defaultScale||1;i=Math.max(.1,Math.min(i,5)),i=((e,t=1)=>{const r=Math.pow(10,t||0);return Math.round(+e*r)/r})(i,2);const s={height:e.export?.height||r?.sourceHeight||t?.height||o?.exporting?.sourceHeight||o?.chart?.height||e.export?.defaultHeight||400,width:e.export?.width||r?.sourceWidth||t?.width||o?.exporting?.sourceWidth||o?.chart?.width||e.export?.defaultWidth||600,scale:i};for(let[e,t]of Object.entries(s))s[e]="string"==typeof t?+t.replace(/px|%/gi,""):t;return s},Ve=async(e,t,r,o)=>{let{export:s,customCode:n}=e;const a="boolean"==typeof n.allowCodeExecution?n.allowCodeExecution:De;if(n){if(a)if("string"==typeof e.customCode.resources)e.customCode.resources=F(e.customCode.resources,J(e.customCode.allowFileResources));else if(!e.customCode.resources)try{const t=i("resources.json","utf8");e.customCode.resources=F(t,J(e.customCode.allowFileResources))}catch(e){j(2,e,"[chart] The default resources.json cannot be loaded.")}}else n=e.customCode={};if(!a&&n){if(n.callback||n.resources||n.customCode)return r(!1,new X("[chart] The 'callback', 'resources' and 'customCode' options have been disabled for this server."));n.callback=!1,n.resources=!1,n.customCode=!1}if(t&&(t.chart=t.chart||{},t.exporting=t.exporting||{},t.exporting.enabled=!1),s.constr=s.constr||"chart",s.type=M(s.type,s.outfile),"svg"===s.type&&(s.width=!1),["globalOptions","themeOptions"].forEach((e=>{try{s&&s[e]&&("string"==typeof s[e]&&s[e].endsWith(".json")?s[e]=D(i(s[e],"utf8"),!0):s[e]=D(s[e],!0))}catch(t){s[e]={},j(2,t,`[chart] The '${e}' cannot be loaded.`)}})),n.allowCodeExecution)try{n.customCode=K(n.customCode,n.allowFileResources)}catch(e){j(2,e,"[chart] The 'customCode' cannot be loaded.")}if(n&&n.callback&&n.callback?.indexOf("{")<0)if(n.allowFileResources)try{n.callback=i(n.callback,"utf8")}catch(e){n.callback=!1,j(2,e,"[chart] The 'callback' cannot be loaded.")}else n.callback=!1;e.export={...e.export,...Ge(e)};try{return r(await Pe(s.strInj||t||o,e))}catch(e){return r(!1,e)}},Je=(e,t)=>{try{let r,o=e.export.instr||e.export.options;return"string"!=typeof o&&(r=o=G(o,e.customCode?.allowCodeExecution)),r=o.replaceAll(/\t|\n|\r/g,"").trim(),";"===r[r.length-1]&&(r=r.substring(0,r.length-1)),e.export.strInj=r,Ve(e,!1,t)}catch(r){return t(!1,new X(`[chart] Malformed input detected for ${e.export?.requestId||"?"}. Please make sure that your JSON/JavaScript options are sent using the "options" attribute, and that if you're using SVG, it is unescaped.`).setError(r))}},Ke=(e,t,r)=>{const{allowCodeExecution:o}=t.customCode;if(e.indexOf("<svg")>=0||e.indexOf("<?xml")>=0)return P(4,"[chart] Parsing input as SVG."),Ve(t,!1,r,e);try{const o=JSON.parse(e.replaceAll(/\t|\n|\r/g," "));return Ve(t,o,r)}catch(e){return J(o)?Je(t,r):r(!1,new X("[chart] Only JSON configurations and SVG are allowed for this server. If this is your server, JavaScript custom code can be enabled by starting the server with the --allowCodeExecution flag.").setError(e))}},Xe=(e,t,r,o)=>{j(1,e),"development"!==process.env.NODE_ENV&&delete e.stack,o(e)},ze=(e,t,r,o)=>{const{statusCode:i,status:s,message:n,stack:a}=e,l=i||s||500;r.status(l).json({statusCode:l,message:n,stack:a})};var Be=(e,t)=>{const r="Too many requests, you have been rate limited. Please try again later.",o={max:t.maxRequests||30,window:t.window||1,delay:t.delay||0,trustProxy:t.trustProxy||!1,skipKey:t.skipKey||!1,skipToken:t.skipToken||!1};o.trustProxy&&e.enable("trust proxy");const i=S({windowMs:60*o.window*1e3,max:o.max,delayMs:o.delay,handler:(e,t)=>{t.format({json:()=>{t.status(429).send({message:r})},default:()=>{t.status(429).send(r)}})},skip:e=>!1!==o.skipKey&&!1!==o.skipToken&&e.query.key===o.skipKey&&e.query.access_token===o.skipToken&&(P(4,"[rate limiting] Skipping rate limiter."),!0)});e.use(i),P(3,`[rate limiting] Enabled rate limiting: ${o.max} requests per ${o.window} minute per IP, trusting proxy: ${o.trustProxy}.`)};class Ye extends X{constructor(e,t){super(e),this.status=this.statusCode=t}setStatus(e){return this.status=e,this}}class Qe extends Ye{constructor(e,t){super(e||"Bad request",400),t&&(this.stack=t.stack)}}const Ze={png:"image/png",jpeg:"image/jpeg",gif:"image/gif",pdf:"application/pdf",svg:"image/svg+xml"};let et=0;const tt=!1,rt=[],ot=[],it=(e,t,r,o)=>{let i=!0;const{id:s,uniqueId:n,type:a,body:l}=o;return e.some((e=>{if(e){let o=e(t,r,s,n,a,l);return void 0!==o&&!0!==o&&(i=o),!0}})),i},st=async(e,t,r)=>{try{(()=>{const e=process.hrtime.bigint()})();const r=ne();tt;const i=e.body,s=++et,n=y().replace(/-/g,"");let a=M(i.type);if(!i||"object"==typeof(o=i)&&null!==o&&0===Object.keys(o).length)throw new Qe("The request body is required. Make sure your Content-Type header is correct (accepted are application/json and multipart/form-data).");let l=D(i.infile||i.options||i.data);if(!l&&!i.svg)throw P(2,`Request ${n} from ${e.headers["x-forwarded-for"]||e.connection.remoteAddress} was incorrect. Payload received: ${JSON.stringify(i)}.`),new Qe("No correct chart data found. Please make sure you are using application/json or multipart/form-data headers, and that the chart data is in the 'infile', 'options' or 'data' attribute if sending JSON or in the 'svg' if sending SVG.");let c=!1;if(c=it(rt,e,t,{id:s,uniqueId:n,type:a,body:i}),!0!==c)return t.send(c);let p=!1;e.socket.on("close",(()=>{p=!0})),P(4,`[export] Got an incoming HTTP request ${n}.`),i.constr="string"==typeof i.constr&&i.constr||"chart";const u={export:{instr:l,type:a,constr:i.constr[0].toLowerCase()+i.constr.substr(1),height:i.height,width:i.width,scale:i.scale||r.export.scale,globalOptions:D(i.globalOptions,!0),themeOptions:D(i.themeOptions,!0)},customCode:{allowCodeExecution:De,allowFileResources:!1,resources:D(i.resources,!0),callback:i.callback,customCode:i.customCode}};tt,l&&(u.export.instr=G(l,u.customCode.allowCodeExecution));const h=ae(r,u);if(h.export.options=l,h.payload={svg:i.svg||!1,b64:i.b64||!1,dataOptions:D(i.dataOptions,!0),noDownload:i.noDownload||!1,requestId:n},i.svg&&(e=>["localhost","(10).(.*).(.*).(.*)","(127).(.*).(.*).(.*)","(172).(1[6-9]|2[0-9]|3[0-1]).(.*).(.*)","(192).(168).(.*).(.*)"].some((t=>e.match(`xlink:href="(?:(http://|https://))?${t}`))))(h.payload.svg))throw new Qe("SVG potentially contain at least one forbidden URL in xlink:href element.");tt,await qe(h,((r,o)=>{if(e.socket.removeAllListeners("close"),p)return P(3,"[export] The client closed the connection before the chart was done processing.");if(o)throw o;if(!r||!r.result)throw new Qe(`[export] Unexpected return from chart generation, please check your request data: ${n} is ${r.result}.`);return a=r.options.export.type,it(ot,e,t,{id:s,body:r.result}),r.result?i.b64?"pdf"===a||"svg"==a?t.send(Buffer.from(r.result,"utf8").toString("base64")):t.send(r.result):(t.header("Content-Type",Ze[a]||"image/png"),i.noDownload||t.attachment(`${e.params.filename||e.body.filename||"chart"}.${a||"png"}`),"svg"===a?t.send(r.result):t.send(Buffer.from(r.result,"base64"))):void 0}))}catch(e){r(e)}var o};const nt=JSON.parse(i(l(W,"package.json"))),at=new Date;const lt=k();lt.disable("x-powered-by"),lt.use(x());const ct=E.memoryStorage(),pt=E({storage:ct,limits:{fieldSize:52428800}});lt.use(k.json({limit:52428800})),lt.use(k.urlencoded({extended:!0,limit:52428800})),lt.use(pt.none());const ut=e=>{e.on("clientError",(e=>{j(1,e,`[server] Client error: ${e.message}`)})),e.on("error",(e=>{j(1,e,`[server] Server error: ${e.message}`)})),e.on("connection",(e=>{e.on("error",(e=>{j(1,e,`[server] Socket error: ${e.message}`)}))}))},ht=async e=>{try{if(!e.enable)return!1;if(!e.ssl.enable&&!e.ssl.force){const t=h.createServer(lt);ut(t),t.listen(e.port,e.host),P(3,`[server] Started HTTP server on ${e.host}:${e.port}.`)}if(e.ssl.enable){let t,r;try{t=await n.readFile(c.join(e.ssl.certPath,"server.key"),"utf8"),r=await n.readFile(c.join(e.ssl.certPath,"server.crt"),"utf8")}catch(t){throw P(2,`[server] Unable to load key/certificate from the '${e.ssl.certPath}' path. Could not run secured layer server.`),t}if(t&&r){const t=d.createServer(lt);ut(t),t.listen(e.ssl.port,e.host),P(3,`[server] Started HTTPS server on ${e.host}:${e.ssl.port}.`)}}e.rateLimiting&&e.rateLimiting.enable&&![0,NaN].includes(e.rateLimiting.maxRequests)&&Be(lt,e.rateLimiting),lt.use(k.static(c.join(W,"public"))),(e=>{!!e&&e.get("/health",((e,t)=>{t.send({status:"OK",bootTime:at,uptime:Math.floor(((new Date).getTime()-at.getTime())/1e3/60)+" minutes",version:nt.version,highchartsVersion:ie(),averageProcessingTime:Me(),performedExports:Fe(),failedExports:We(),exportAttempts:Ue(),sucessRatio:Fe()/Ue()*100,pool:He()})}))})(lt),(e=>{e.post("/",st),e.post("/:filename",st)})(lt),(e=>{!!e&&e.get("/",((e,t)=>{t.sendFile(l(W,"public","index.html"))}))})(lt),(e=>{!!e&&e.post("/change_hc_version/:newVersion",(async(e,t)=>{const r=process.env.HIGHCHARTS_ADMIN_TOKEN;if(!r||!r.length)return t.send({error:!0,message:"Server not configured to do run-time version changes: HIGHCHARTS_ADMIN_TOKEN not set."});const o=e.get("hc-auth");if(!o||o!==r)return t.send({error:!0,message:"Invalid or missing token: set token in the hc-auth header."});const i=e.params.newVersion;if(i){try{await re(i)}catch(e){t.send({error:!0,message:e})}t.send({version:ie()})}else t.send({error:!0,message:"No new version supplied."})}))})(lt),(e=>{e.use(Xe),e.use(ze)})(lt)}catch(e){throw new X("[server] Could not configure and start the server.").setError(e)}};var dt={startServer:ht,enableRateLimiting:e=>Be(lt,e),getExpress:()=>k,getApp:()=>lt,use:(e,...t)=>{lt.use(e,...t)},get:(e,...t)=>{lt.get(e,...t)},post:(e,...t)=>{lt.post(e,...t)}},gt={batchExport:async e=>{const t=[];for(let r of e.export.batch.split(";"))r=r.split("="),2===r.length&&t.push(qe({...e,export:{...e.export,infile:r[0],outfile:r[1]}},((e,t)=>{if(t)throw t;s(e.options.export.outfile,Buffer.from(e.result,"base64"))})));await Promise.all(t).then((async()=>{await Ne()})).catch((e=>{throw new X("[chart] Error encountered during batch export.").setError(e)}))},singleExport:async e=>{e.export.instr=e.export.instr||e.export.options,await qe(e,(async(e,t)=>{if(t)throw t;const{outfile:r,type:o}=e.options.export;s(r||`chart.${o}`,"svg"!==o?Buffer.from(e.result,"base64"):e.result),await Ne()}))},startExport:qe,mapToNewConfig:e=>{const t={};for(const[r,o]of Object.entries(e)){const e=I[r]?I[r].split("."):[];e.reduce(((t,r,i)=>t[r]=e.length-1===i?o:t[r]||{}),t)}return t},manualConfig:async e=>{let r={};t(e)&&(r=JSON.parse(i(e,"utf8")));const o=Object.keys(C).map((e=>({title:`${e} options`,value:e})));return f({type:"multiselect",name:"category",message:"Which category do you want to configure?",hint:"Space: Select specific, A: Select all, Enter: Confirm.",instructions:"",choices:o},{onSubmit:async(t,o)=>{let i=0,s=[];for(const e of o)C[e]=C[e].map((t=>({...t,section:e}))),s=[...s,...C[e]];return await f(s,{onSubmit:async(t,o)=>{if("modules"===t.name?(o=o.length?o.map((e=>t.choices[e])):t.choices,r[t.section][t.name]=o):r[t.section]=pe(Object.assign({},r[t.section]||{}),t.name.split("."),t.choices?t.choices[o]:o),++i===s.length){try{await n.writeFile(e,JSON.stringify(r,null,2),"utf8")}catch(e){j(1,e,"[config] Error while creating config.json.")}return!0}}}),!0}})},setOptions:(e,t)=>(t?.length&&(se=function(e){const t=e.findIndex((e=>"loadConfig"===e.replace(/-/g,"")));if(t>-1&&e[t+1]){const r=e[t+1];try{if(r&&r.endsWith(".json"))return JSON.parse(i(r))}catch(e){j(2,e,`[config] Unable to load config from the ${r}.`)}}return{}}(t)),le(O,se),se=ce(O),e&&(se=ae(se,e,R)),t?.length&&(se=function(e,t,r){for(let r=0;r<t.length;r++){let o=t[r].replace(/-/g,"");const i=I[o]?I[o].split("."):[];i.reduce(((s,n,a)=>(i.length-1===a&&void 0!==s[n]&&(t[++r]?s[n]=t[r]||s[n]:(console.log(`Missing argument value for ${o}!`.red,"\n"),e=V())),s[n])),e)}return e}(se,t)),se),log:P,logWithStack:j,killPool:Ne,server:dt,startServer:ht,printLogo:e=>{const t=JSON.parse(i(l(W,"package.json"))).version;e?console.log(`Starting highcharts export server v${t}...`):console.log(i(W+"/msg/startup.msg").toString().bold.yellow,`v${t}`)},printUsage:V,initExport:async e=>{var t;return t=e.customCode&&e.customCode.allowCodeExecution,De=J(t),(e=>{H(e&&parseInt(e.level)),e&&e.dest&&U(e.dest,e.file||"highcharts-export-server.log")})(e.logging),await te(e.highcharts||{version:"latest"}),await $e({pool:e.pool||{minWorkers:1,maxWorkers:1},puppeteerArgs:e.puppeteer?.args||[]}),e}};export{gt as default};
//# sourceMappingURL=index.esm.js.map
